[tool.poetry]
name = "sema4ai-di-client"
version = "1.0.14"
description = "Sema4AI Document Intelligence API client"
authors = ["Sukeesh V. <sukeesh@sema4.ai>"]

license = "Sema4.ai Proprietary (see LICENSE)"
readme = "README.md"
repository = "https://github.com/Sema4AI/document-intelligence-client"
keywords = ["OpenAPI", "OpenAPI-Generator", "Document Intelligence API"]
packages = [{ include = "sema4ai/di_client", from = "src" }]

[tool.poetry.dependencies]
python = "^3.10"

urllib3 = "^2.2.0"
python-dateutil = "^2.8.2"
pydantic = "^2.8.2"
typing-extensions = "^4.11.0"
sema4ai-actions = "^1.3.8"
pandas = "^2.2.2"

[tool.poetry.group.dev.dependencies]
sema4ai-devutils = { path = "../devutils/", develop = true }
pytest = ">=7.2.1"
tox = ">=3.9.0"
flake8 = ">=4.0.0"
types-python-dateutil = ">=2.8.19.14"
mypy = "1.4.1"
pandas-stubs = "^2.2.3"


[build-system]
requires = ["setuptools"]
build-backend = "setuptools.build_meta"

[tool.pylint.'MESSAGES CONTROL']
extension-pkg-whitelist = "pydantic"

[tool.mypy]
mypy_path = "src:tests"

# TODO: enable "strict" once all these individual checks are passing
# strict = true

# List from: https://mypy.readthedocs.io/en/stable/existing_code.html#introduce-stricter-options
warn_unused_configs = true
warn_redundant_casts = true
warn_unused_ignores = true

## Getting these passing should be easy
strict_equality = true
strict_concatenate = true

## Strongly recommend enabling this one as soon as you can
check_untyped_defs = true

## These shouldn't be too much additional work, but may be tricky to
## get passing if you use a lot of untyped libraries
disallow_subclassing_any = true
disallow_untyped_decorators = true
disallow_any_generics = true

### These next few are various gradations of forcing use of type annotations
#disallow_untyped_calls = true
#disallow_incomplete_defs = true
#disallow_untyped_defs = true
#
### This one isn't too hard to get passing, but return on investment is lower
#no_implicit_reexport = true
#
### This one can be tricky to get passing if you use a lot of untyped libraries
#warn_return_any = true
