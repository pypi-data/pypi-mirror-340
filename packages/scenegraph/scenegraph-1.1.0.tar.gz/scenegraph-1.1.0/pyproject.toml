# {# pkglts, pyproject.build
[build-system]
# Minimum requirements for the build system to execute.
requires = ["setuptools", "wheel"]  # , "setuptools-scm"]  # PEP 508 specifications.
build-backend = "setuptools.build_meta"  # we don't know if we need it
# #}

# {# pkglts, pyproject.project
[project]  # https://packaging.python.org/en/latest/specifications/pyproject-toml/
name = "scenegraph"
version = "1.1.0"
description = "Simple organisation of shapes in space"
readme = "README.rst"
requires-python = ">= 3.9"
license = {text = "cc_by_nc"}
authors = [
    {name = "revesansparole", email = "revesansparole@gmail.com"},
]
maintainers = [
    {name = "revesansparole", email = "revesansparole@gmail.com"},
    {name = "Jerome Chopard", email = "revesansparole@gmail.com"},
]
keywords = [
]
classifiers = [
    "Development Status :: 2 - Pre-Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: BSD License",
    "Natural Language :: English",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.9",
]
dependencies = [
    "numpy", 
]

[project.optional-dependencies]
doc = [
    "sphinx",
    "sphinx-gallery",
    "sphinx-rtd-theme",
]
dvlpt = [
    "black",
    "twine",
]
example = [
    "matplotlib",
]
test = [
    "coverage",
    "pytest",
    "pytest-cov",
    "pytest-mock",
]


[project.urls]
repository = "https://gitlab.com/revesansparole/scenegraph"
pip = "https://pypi.org/project/scenegraph/1.1.0/"
conda = "https://anaconda.org/revesansparole/scenegraph"
doc = "https://revesansparole.gitlab.io/scenegraph/"
pypi = "https://badge.fury.io/py/scenegraph"


[tool.setuptools]
include-package-data = true

[tool.setuptools.packages.find]
where = ["src"]

[tool.setuptools.package-data]
"*" = ['*.json', '*.ini', '*.csv', '*.rst', '*.svg', ]

# #}
# {# pkglts, glabpkg_dev, after pyproject.project
[tool.black]
line-length = 120
# #}
# {# pkglts, test, after pyproject.project
[tool.pytest.ini_options]
addopts = "--maxfail=2 -rf --cov=scenegraph"
# #}

# {# pkglts, pyproject.scripts
[project.scripts]
# #}

# {# pkglts, pyproject.gui_scripts
[project.gui-scripts]
# #}
