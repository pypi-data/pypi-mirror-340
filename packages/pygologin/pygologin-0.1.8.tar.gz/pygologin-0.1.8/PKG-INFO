Metadata-Version: 2.4
Name: pygologin
Version: 0.1.8
Summary: Not official GoLogin python package
Project-URL: Homepage, https://github.com/at146/pygologin
Project-URL: Repository, https://github.com/at146/pygologin
Project-URL: Issues, https://github.com/at146/pygologin/issues
Author-email: Alex Tarasov <at146@ya.ru>
Maintainer-email: Alex Tarasov <at146@ya.ru>
License-Expression: MIT
License-File: LICENSE
Keywords: api,gologin
Classifier: License :: OSI Approved :: MIT License
Classifier: Operating System :: OS Independent
Classifier: Programming Language :: Python :: 3
Requires-Python: >=3.8
Requires-Dist: psutil<7.1,>=6.0
Requires-Dist: requests<3,>=2
Provides-Extra: dev
Requires-Dist: mypy<1.16.0,>=1.11.2; extra == 'dev'
Requires-Dist: pre-commit<4.0,>=3.5.0; extra == 'dev'
Requires-Dist: ruff~=0.11.0; extra == 'dev'
Requires-Dist: types-psutil<7.0.1.0,>=6.0.0.20240901; extra == 'dev'
Requires-Dist: types-requests~=2.32.0.20240905; extra == 'dev'
Provides-Extra: test
Requires-Dist: pytest~=8.3.2; extra == 'test'
Description-Content-Type: text/markdown

# pygologin

REST API provides programmatic access to GoLogin App. Create a new browser profile, get a list of all browser profiles, add a browser profile and running.

## Not Official Package

## Getting Started

GoLogin supports Linux, MacOS and Windows platforms.

### Installation

`pip install pygologin`

or clone this repository

`git clone https://github.com/at146/pygologin.git`

### Usage

Where is token? API token is [here](https://app.gologin.com/#/personalArea/TokenApi).
To have an access to the page below you need [register](https://app.gologin.com/#/createUser) GoLogin account.

![Token API in Settings](https://user-images.githubusercontent.com/12957968/146891933-c3b60b4d-c850-47a5-8adf-bc8c37372664.gif)

### Methods

#### Constructor

- `options` <[Object]> Options for profile
  - `autoUpdateBrowser` <[boolean]> do not ask whether download new browser version (default false)
    - `token` <[string]> your API [token](https://gologin.com/#/personalArea/TokenApi)
    - `profile_id` <[string]> profile ID
    - `executablePath` <[string]> path to executable Orbita file. Orbita will be downloaded automatically if not specified.
  - `remote_debugging_port` <[int]> port for remote debugging
    - `vncPort` <[integer]> port of VNC server if you using it
  - `tmpdir` <[string]> path to temporary directore for saving profiles
  - `extra_params` arrayof <[string]> extra params for browser orbita (ex. extentions etc.)
  - `uploadCookiesToServer` <[boolean]> upload cookies to server after profile stopping (default false)
  - `writeCookesFromServer` <[boolean]> download cookies from server and write to profile cookies file (default true)
  - `port` <[integer]> Orbita start port (uncomment out the lines with "random port" and "port" in `gologin-selenium.py` to select a random launch port)

## Full GoLogin API

**Swagger:** [GoLogin Swagger Documentation](https://api.gologin.com/docs)

**Postman:** [link here](https://documenter.getpostman.com/view/21126834/Uz5GnvaL)
