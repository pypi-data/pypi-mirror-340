name: Python CI

on:
  push:
    branches: [ master, release ]
  pull_request:
    branches: [ release ]

permissions:
  contents: write

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: true
      matrix:
        python-version: ["3.12"]

    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
        cache: 'pip'
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install poetry
        poetry install --all-extras
        
    - name: Run tests
      run: |
        poetry run pytest tests/ -v
        
  publish:
    needs: test
    runs-on: ubuntu-latest
    # Only run on release branch when push (merge)
    if: github.event_name == 'push' && github.ref == 'refs/heads/release'
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: "3.12"
        cache: 'pip'
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install poetry
        
    - name: Build and publish
      env:
        PYPI_API_TOKEN: ${{ secrets.PYPI_API_TOKEN }}
      run: |
        # Build the package using poetry
        poetry build
        
        # Publish to PyPI using poetry
        poetry config pypi-token.pypi $PYPI_API_TOKEN
        poetry publish
