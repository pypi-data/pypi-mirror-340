[project]
name = "orange-shotgrid-mcp-server"
version = "0.2.5"
description = "A Model Context Protocol (MCP) server implementation using fastmcp"
readme = "README.md"
requires-python = ">=3.10,<3.11"
dependencies = [
    "fastmcp>=0.4.1",
    "mcp>=1.2.0",
    "uvicorn>=0.22.0",
    "pydantic>=2.0.0",
    "python-dotenv>=1.0.0",
    "platformdirs>=4.1.0",
    "aiohttp>=3.9.0",
    "requests>=2.31.0",
    "shotgun-api3>=3.5",
]
authors = [
    { name = "Hal Long", email = "hal.long@outlook.com" },
]
keywords = [
    "shotgrid",
    "mcp",
    "server",
    "api",
    "Flow Production Tracking",
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Software Development :: Libraries :: Python Modules",
]

[project.license]
text = "MIT"

[project.urls]
Homepage = "https://github.com/loonghao/shotgrid-mcp-server"
Repository = "https://github.com/loonghao/shotgrid-mcp-server.git"
Issues = "https://github.com/loonghao/shotgrid-mcp-server/issues"
Changelog = "https://github.com/loonghao/shotgrid-mcp-server/blob/main/CHANGELOG.md"

[project.optional-dependencies]
test = [
    "pytest>=7.0.0",
    "pytest-asyncio>=0.21.0",
    "pytest-mock>=3.10.0",
    "pytest-cov>=4.0.0",
    "PyYAML",
]
lint = [
    "ruff",
    "black",
    "mypy",
    "types-requests",
]
dev = [
    "black>=23.12.1",
    "coverage>=7.4.0",
    "flake8>=7.0.0",
    "isort>=5.13.2",
    "mypy>=1.8.0",
    "nox>=2023.4.22",
    "pytest>=7.4.4",
    "pytest-cov>=4.1.0",
    "ruff>=0.1.11",
    "uv>=0.1.12",
]

[project.scripts]
shotgrid-mcp-server = "shotgrid_mcp_server.server:main"

[tool.commitizen]
name = "cz_conventional_commits"
version = "0.2.5"
tag_format = "v$version"
version_files = [
    "pyproject.toml:version",
]

[tool.hatch.build.targets.wheel]
packages = [
    "tests",
    "nox_actions",
]

[tool.hatch.metadata]
allow-direct-references = true

[tool.black]
line-length = 120
target-version = [
    "py310",
    "py311",
    "py312",
]
include = "\\.pyi?$"
exclude = "(\n  /(\n      \\.eggs         # exclude a few common directories in the\n    | \\.git          # root of the project\n    | \\.hg\n    | \\.mypy_cache\n    | \\.tox\n    | \\.nox\n    | \\.venv\n    | _build\n    | buck-out\n    | build\n    | dist\n  )/\n)\n"

[tool.isort]
profile = "black"
atomic = true
include_trailing_comma = true
lines_after_imports = 2
lines_between_types = 1
use_parentheses = true
src_paths = [
    "shotgrid_mcp_server",
    "tests",
]
filter_files = true
known_first_party = "shotgrid_mcp_server"
import_heading_future = "Import future modules"
import_heading_stdlib = "Import built-in modules"
import_heading_thirdparty = "Import third-party modules"
import_heading_firstparty = "Import local modules"
force_sort_within_sections = true
force_single_line = true
default_section = "THIRDPARTY"
skip_glob = []

[tool.ruff]
line-length = 120
target-version = "py310"
src = [
    "src",
    "tests",
]

[tool.ruff.lint]
select = [
    "E",
    "W",
    "F",
    "I",
    "C",
    "B",
]
ignore = [
    "E501",
    "PLR0913",
    "RUF001",
    "RUF002",
    "RUF003",
]

[tool.ruff.lint.per-file-ignores]
"__init__.py" = [
    "F401",
]
"noxfile.py" = [
    "E402",
    "I001",
]
"tests/*" = [
    "S101",
]

[tool.coverage.run]
source = [
    "shotgrid_mcp_server",
]
branch = true

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if __name__ == .__main__.:",
    "raise NotImplementedError",
    "if TYPE_CHECKING:",
]

[tool.mypy]
python_version = "3.10"
strict = true
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
mypy_path = "src"
packages = [
    "shotgrid_mcp_server",
]
ignore_missing_imports = true
namespace_packages = false
explicit_package_bases = false

[tool.pytest.ini_options]
asyncio_mode = "strict"
testpaths = [
    "tests",
]
python_files = [
    "test_*.py",
]
addopts = "-v --cov=shotgrid_mcp_server --cov-report=term-missing"

[tool.uvx]
dependencies = [
    "git+https://github.com/shotgunsoftware/python-api.git#egg=shotgun-api3",
]

[build-system]
requires = [
    "hatchling",
]
build-backend = "hatchling.build"
