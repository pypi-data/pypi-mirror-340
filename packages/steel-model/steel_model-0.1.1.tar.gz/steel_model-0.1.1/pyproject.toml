[project]
name = "steel-model"
version = "0.1.1"
description = "Add your description here"
readme = "README.md"
requires-python = ">=3.13"
dependencies = [
    "folium",
    "geopandas",
    "black",
    "networkx",
    "openpyxl",
    "osm2geojson",
    "pandas",
    "pydantic-settings",
    "python-dotenv",
    "rich",
    "pycountry",
    "scipy",
    "pydantic",
    "mocker",
    "matplotlib",
    "sentry-sdk",
    "osmnx",
    "scikit-learn",
    "dash",
    "dash-leaflet",
    "dash-extensions",
    "pyomo",
    "seaborn",
    "fiona",
    "cartopy",
    "geopy",
    "ipython",
    "reverse-geocoder",
]
[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.sdist]
packages = ["src/steelo", "src/network_optimisation"]

[tool.hatch.build.targets.wheel]
packages = ["src/steelo", "src/network_optimisation"]

[tool.uv]
dev-dependencies = [
    "pytest>=8",
    "coverage>=7",
    "mypy",
    "jupyterlab>=4.3.0",
    "pytest-mock>=3",
    "pandas-stubs>=2.2.3.241009",
    "ruff>=0.8.0",
    "types-shapely>=2.0.0.20241112",
    "ipykernel>=6.29.5",
]

[tool.ruff]
line-length = 120

[project.scripts]
show_plants_on_map = "steelo.entrypoints.cli:show_plants_on_map"
show_cost_of_x_on_map = "steelo.entrypoints.cli:show_cost_of_x_on_map"
recreate_plants_sample_data = "steelo.entrypoints.cli:recreate_plants_sample_data"
run_simulation = "steelo.entrypoints.cli:run_full_simulation"

[tool.pytest.ini_options]
filterwarnings = [
  "ignore::pydantic.warnings.PydanticDeprecatedSince20",
  "ignore::FutureWarning",
  "ignore::DeprecationWarning",
  "ignore:You will likely lose important projection information:UserWarning"
]
testpaths = ["tests"]

[tool.mypy]
plugins = ["pydantic.mypy"]
mypy_path = "src/steelo"

[tool.coverage.run]
branch = true
source = ["src"]

[tool.coverage.report]
show_missing = true
exclude_lines = [
    "pragma: no cover",
    "raise NotImplementedError",
    "if TYPE_CHECKING:",
]
