# coding: utf-8

"""
    Chino.io :: Scriba API

    An API to create and search immutable, legally-validated Audit Logs.<br>Provided by Chino.io - https://www.chino.io  # noqa: E501

    OpenAPI spec version: v1
    Contact: tech-support@chino.io
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

from __future__ import absolute_import

import re  # noqa: F401

# python 2 and python 3 compatibility library
import six

from chinoscriba.api_client import ApiClient


class StatsApi(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    Ref: https://github.com/swagger-api/swagger-codegen
    """

    def __init__(self, api_client=None):
        if api_client is None:
            api_client = ApiClient()
        self.api_client = api_client

    def stats_read(self, **kwargs):  # noqa: E501
        """Retrieve customer statistics  # noqa: E501

        Get some figures about the logs saved in the system for the user, such as the total count and the time of the oldest log/block.  Also includes the daily usage stats (e.g. count of API calls per service) for the specified time period (Default time period is the last 30 days).  The following parameters can be used to customize the time range and type of data returned: * `ui` (bool): include/exclude the stats about operations performed from   the Console UI. Default is `false`. * `t` (int): Number of days to consider as the time period. Can only be   used if `months_ago` is not used.   - Value should be chosen from 30, 60, 90 - other values will return an     error (400).   - It will retrieve stats for the last XX days (exact number) from today. * `months_ago` (int) : Retrieve full-month stats for current or past months. Can only be used if `t` is not used.   - Value should be chosen from 0, 1, 2 - other values will return an     error (400).   - It will retrieve statistics from the first day to the last day of the     specified month. If `months_ago` is 0, it will retrieve stats from the     beginning of the current month up to today.  **NOTE**: Only one of `t` or `months_ago` can be used. If both are used, an error (400) will be returned.  # noqa: E501
        This method makes a synchronous HTTP request by default. To make an
        asynchronous HTTP request, please pass async_req=True
        >>> thread = api.stats_read(async_req=True)
        >>> result = thread.get()

        :param async_req bool
        :param bool ui: include in the stats those logs generated by interactions with the Chino.io Console web UI
        :param int t: Retrieve data for the last XX days. XX can be 30, 60 or 90. <br>Cannot be used together with `months_ago` - read the documentation above to learn more.
        :param int months_ago: Retrieve data from the 1st day of the current month, or the full month stats of a past month (up to 2 months ago). <br>Cannot be used together with `t` - read the documentation above to learn more.
        :return: Stat
                 If the method is called asynchronously,
                 returns the request thread.
        """
        kwargs['_return_http_data_only'] = True
        if kwargs.get('async_req'):
            return self.stats_read_with_http_info(**kwargs)  # noqa: E501
        else:
            (data) = self.stats_read_with_http_info(**kwargs)  # noqa: E501
            return data

    def stats_read_with_http_info(self, **kwargs):  # noqa: E501
        """Retrieve customer statistics  # noqa: E501

        Get some figures about the logs saved in the system for the user, such as the total count and the time of the oldest log/block.  Also includes the daily usage stats (e.g. count of API calls per service) for the specified time period (Default time period is the last 30 days).  The following parameters can be used to customize the time range and type of data returned: * `ui` (bool): include/exclude the stats about operations performed from   the Console UI. Default is `false`. * `t` (int): Number of days to consider as the time period. Can only be   used if `months_ago` is not used.   - Value should be chosen from 30, 60, 90 - other values will return an     error (400).   - It will retrieve stats for the last XX days (exact number) from today. * `months_ago` (int) : Retrieve full-month stats for current or past months. Can only be used if `t` is not used.   - Value should be chosen from 0, 1, 2 - other values will return an     error (400).   - It will retrieve statistics from the first day to the last day of the     specified month. If `months_ago` is 0, it will retrieve stats from the     beginning of the current month up to today.  **NOTE**: Only one of `t` or `months_ago` can be used. If both are used, an error (400) will be returned.  # noqa: E501
        This method makes a synchronous HTTP request by default. To make an
        asynchronous HTTP request, please pass async_req=True
        >>> thread = api.stats_read_with_http_info(async_req=True)
        >>> result = thread.get()

        :param async_req bool
        :param bool ui: include in the stats those logs generated by interactions with the Chino.io Console web UI
        :param int t: Retrieve data for the last XX days. XX can be 30, 60 or 90. <br>Cannot be used together with `months_ago` - read the documentation above to learn more.
        :param int months_ago: Retrieve data from the 1st day of the current month, or the full month stats of a past month (up to 2 months ago). <br>Cannot be used together with `t` - read the documentation above to learn more.
        :return: Stat
                 If the method is called asynchronously,
                 returns the request thread.
        """

        all_params = ['ui', 't', 'months_ago']  # noqa: E501
        all_params.append('async_req')
        all_params.append('_return_http_data_only')
        all_params.append('_preload_content')
        all_params.append('_request_timeout')

        params = locals()
        for key, val in six.iteritems(params['kwargs']):
            if key not in all_params:
                raise TypeError(
                    "Got an unexpected keyword argument '%s'"
                    " to method stats_read" % key
                )
            params[key] = val
        del params['kwargs']

        collection_formats = {}

        path_params = {}

        query_params = []
        if 'ui' in params:
            query_params.append(('ui', params['ui']))  # noqa: E501
        if 't' in params:
            query_params.append(('t', params['t']))  # noqa: E501
        if 'months_ago' in params:
            query_params.append(('months_ago', params['months_ago']))  # noqa: E501

        header_params = {}

        form_params = []
        local_var_files = {}

        body_params = None
        # HTTP header `Accept`
        header_params['Accept'] = self.api_client.select_header_accept(
            ['application/json'])  # noqa: E501

        # Authentication setting
        auth_settings = ['Basic', 'InternalToken']  # noqa: E501

        return self.api_client.call_api(
            '/stats', 'GET',
            path_params,
            query_params,
            header_params,
            body=body_params,
            post_params=form_params,
            files=local_var_files,
            response_type='Stat',  # noqa: E501
            auth_settings=auth_settings,
            async_req=params.get('async_req'),
            _return_http_data_only=params.get('_return_http_data_only'),
            _preload_content=params.get('_preload_content', True),
            _request_timeout=params.get('_request_timeout'),
            collection_formats=collection_formats)
