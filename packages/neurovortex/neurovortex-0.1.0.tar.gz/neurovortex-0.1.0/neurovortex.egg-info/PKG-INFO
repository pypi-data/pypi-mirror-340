Metadata-Version: 2.4
Name: neurovortex
Version: 0.1.0
Summary: An AI Optimizer module for improving performance.
Home-page: https://github.com/boring-dude/neurovortex
Author: Boring-Dude
Author-email: cybergx932@gmail.com
License: MIT
Project-URL: Bug Tracker, https://github.com/Boring-Dude/neurovortex/issues
Project-URL: Documentation, https://github.com/Boring-Dude/neurovortex/wiki
Project-URL: Source Code, https://github.com/Boring-Dude/neurovortex
Keywords: AI optimization,model optimization,deep learning,performance tuning
Classifier: Development Status :: 3 - Alpha
Classifier: Intended Audience :: Developers
Classifier: Intended Audience :: Science/Research
Classifier: License :: OSI Approved :: MIT License
Classifier: Programming Language :: Python
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.8
Classifier: Programming Language :: Python :: 3.9
Classifier: Programming Language :: Python :: 3.10
Classifier: Topic :: Scientific/Engineering :: Artificial Intelligence
Requires-Python: >=3.8
Description-Content-Type: text/markdown
Requires-Dist: torch>=1.9.0
Requires-Dist: onnx>=1.10.0
Requires-Dist: tensorflow>=2.6.0
Requires-Dist: psutil>=5.8.0
Requires-Dist: gputil>=1.4.0
Provides-Extra: dev
Requires-Dist: pytest; extra == "dev"
Requires-Dist: black; extra == "dev"
Requires-Dist: flake8; extra == "dev"
Provides-Extra: docs
Requires-Dist: sphinx; extra == "docs"
Requires-Dist: sphinx_rtd_theme; extra == "docs"
Dynamic: author
Dynamic: author-email
Dynamic: classifier
Dynamic: description
Dynamic: description-content-type
Dynamic: home-page
Dynamic: keywords
Dynamic: license
Dynamic: project-url
Dynamic: provides-extra
Dynamic: requires-dist
Dynamic: requires-python
Dynamic: summary

# NEUROVORTEX OPTIMIZER

An AI Optimizer Module for improving of AI Models and managing system resources.

## Features
- Model format Detection and loading
- System resource monitoring (CPU, memory, GPU)
- AI Model optimization techniques

## Installation
```Bash
pip install neurovortex
```

## Usage
```Python
from ai_optimizer import AIOptimizer, load_model, ResourceManager

model = load_model("example_model.pth")
optimizer = AIOptimizer(model)
optimized_model = optimizer.optimize_model()

print("CPU Usage:", ResourceManager.get_cpu_usage(), "%")
```
