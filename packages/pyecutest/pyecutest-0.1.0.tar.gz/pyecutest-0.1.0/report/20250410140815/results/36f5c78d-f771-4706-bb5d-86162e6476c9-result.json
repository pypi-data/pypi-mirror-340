{"name": "test_ecu_communication_sequence", "status": "failed", "statusDetails": {"message": "AssertionError: Parameter update failed\nassert b'UPDATE_OK' in b'VALUE=0x55\\n'", "trace": "can_interface = <interfaces.demo_interfaces.can_interface.DemoCANInterface object at 0x0000029D38200830>\nserial_interface = <interfaces.demo_interfaces.serial_interface.DemoSerialInterface object at 0x0000029D3816F380>\n\n    def test_ecu_communication_sequence(can_interface, serial_interface):\n        \"\"\"Test a complete ECU communication sequence.\"\"\"\n        # Step 1: Send diagnostic request\n        request_data = [0x02, 0x10, 0x01]\n        assert can_interface.send_message(0x7DF, request_data), \"Failed to send diagnostic request\"\n    \n        # Step 2: Verify diagnostic session\n        response = can_interface.receive_message(0x7E8)\n        print(f\"Diagnostic response: {response}\")\n        assert response is not None, \"No diagnostic response\"\n        assert response[1] == 0x50, \"Invalid diagnostic response\"\n    \n        # Step 3: Read parameter via serial\n        command = b\"READ PARAM 0x1000\\r\\n\"\n        bytes_written = serial_interface.write(command)\n        assert bytes_written == len(command), \"Failed to write parameter read command\"\n    \n        # Step 4: Verify parameter value\n        response = serial_interface.readline()\n        print(f\"Parameter read response: {response}\")\n        assert response is not None, \"No parameter response\"\n        assert b\"VALUE=\" in response, \"Invalid parameter response\"\n    \n        # Step 5: Send parameter update\n        update_command = b\"WRITE PARAM 0x1000 0x55\\r\\n\"\n        bytes_written = serial_interface.write(update_command)\n        assert bytes_written == len(update_command), \"Failed to write parameter update command\"\n    \n        # Step 6: Verify update response\n        response = serial_interface.readline()\n        print(f\"Parameter write response: {response}\")\n        assert response is not None, \"No update response\"\n>       assert b\"UPDATE_OK\" in response, \"Parameter update failed\"\nE       AssertionError: Parameter update failed\nE       assert b'UPDATE_OK' in b'VALUE=0x55\\n'\n\ntests\\test_ecu_communication.py:83: AssertionError"}, "description": "Test a complete ECU communication sequence.", "attachments": [{"name": "stdout", "source": "7632f83a-f0ba-47c0-8e67-7177fab2ee8d-attachment.txt", "type": "text/plain"}], "start": 1744265295555, "stop": 1744265295555, "uuid": "20edc905-9d7b-4e3d-9a12-c0f581142be3", "historyId": "fc611edec045c1c1d4bbd8f06bcd0930", "testCaseId": "fc611edec045c1c1d4bbd8f06bcd0930", "fullName": "tests.test_ecu_communication#test_ecu_communication_sequence", "labels": [{"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_ecu_communication"}, {"name": "host", "value": "5423824W700020"}, {"name": "thread", "value": "15904-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_ecu_communication"}]}