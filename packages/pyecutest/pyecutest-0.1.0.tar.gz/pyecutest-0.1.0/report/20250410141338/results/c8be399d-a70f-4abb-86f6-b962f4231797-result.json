{"name": "test_parameter_read[8192-170]", "status": "failed", "statusDetails": {"message": "AssertionError: Invalid response format\nassert b'VALUE=' in b'ERROR\\n'", "trace": "serial_interface = <interfaces.demo_interfaces.serial_interface.DemoSerialInterface object at 0x000001CFDFD2E350>\nparam_address = 8192, param_value = 170\n\n    @pytest.mark.parametrize(\"param_address,param_value\", [\n        (0x1000, 0x55),\n        (0x2000, 0xAA)\n    ])\n    def test_parameter_read(serial_interface, param_address, param_value):\n        \"\"\"Test parameter reading with different values.\"\"\"\n        # Send parameter read command\n        command = f\"READ PARAM {hex(param_address)}\\r\\n\".encode()\n        serial_interface.write(command)\n    \n        # Read response\n        response = serial_interface.readline()\n    \n        # Verify response format\n        assert response is not None, \"No response received\"\n>       assert b\"VALUE=\" in response, \"Invalid response format\"\nE       AssertionError: Invalid response format\nE       assert b'VALUE=' in b'ERROR\\n'\n\ntests\\test_basic_ecu.py:62: AssertionError"}, "description": "Test parameter reading with different values.", "attachments": [{"name": "stdout", "source": "2c0d1399-ed3f-4bb8-ab5f-78168ccf4985-attachment.txt", "type": "text/plain"}], "parameters": [{"name": "param_address", "value": "8192"}, {"name": "param_value", "value": "170"}], "start": 1744265619436, "stop": 1744265619437, "uuid": "14a2c8e2-5792-4444-a2f7-2f171c3cd55d", "historyId": "fc2408317923c9596b160f940659fcf9", "testCaseId": "c2e5bd52ef3586c50d1473efa23e17a5", "fullName": "tests.test_basic_ecu#test_parameter_read", "labels": [{"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_basic_ecu"}, {"name": "host", "value": "5423824W700020"}, {"name": "thread", "value": "3708-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_basic_ecu"}]}