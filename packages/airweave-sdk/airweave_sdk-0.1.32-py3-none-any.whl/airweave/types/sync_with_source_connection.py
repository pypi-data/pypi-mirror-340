# This file was auto-generated by Fern from our API Definition.

from ..core.pydantic_utilities import UniversalBaseModel
import typing
import datetime as dt
from .sync_status import SyncStatus
from .connection import Connection
from ..core.pydantic_utilities import IS_PYDANTIC_V2
import pydantic


class SyncWithSourceConnection(UniversalBaseModel):
    """
    Schema for Sync with source connection.
    """

    name: str
    source_connection_id: str
    embedding_model_connection_id: typing.Optional[str] = None
    destination_connection_ids: typing.List[str]
    description: typing.Optional[str] = None
    cron_schedule: typing.Optional[str] = None
    next_scheduled_run: typing.Optional[dt.datetime] = None
    white_label_id: typing.Optional[str] = None
    white_label_user_identifier: typing.Optional[str] = None
    sync_metadata: typing.Optional[typing.Dict[str, typing.Optional[typing.Any]]] = None
    status: SyncStatus
    id: str
    organization_id: str
    created_at: dt.datetime
    modified_at: dt.datetime
    created_by_email: str
    modified_by_email: str
    source_connection: typing.Optional[Connection] = None

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
