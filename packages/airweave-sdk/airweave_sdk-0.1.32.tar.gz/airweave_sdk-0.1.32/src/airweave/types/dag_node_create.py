# This file was auto-generated by Fern from our API Definition.

from ..core.pydantic_utilities import UniversalBaseModel
from .node_type import NodeType
import typing
import pydantic
from ..core.pydantic_utilities import IS_PYDANTIC_V2


class DagNodeCreate(UniversalBaseModel):
    """
    Schema for creating a DAG node.
    """

    type: NodeType
    name: str
    config: typing.Optional[typing.Dict[str, typing.Optional[typing.Any]]] = None
    connection_id: typing.Optional[str] = None
    entity_definition_id: typing.Optional[str] = None
    transformer_id: typing.Optional[str] = None
    id: typing.Optional[str] = pydantic.Field(default=None)
    """
    Optional pre-set ID for the node
    """

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
