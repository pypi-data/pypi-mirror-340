[build-system]
requires = ["setuptools>=42.0.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "mmv-regionseg"
version = "0.3.0"
description = "Napari plugin for the segmentation of regions by flood"
readme = "README.md"
authors = [{name = "Peter Lampen", email = "lampen@isas.de"}]
license = {file = "LICENSE"}
requires-python = ">=3.9"
classifiers = [
    "Development Status :: 2 - Pre-Alpha",
    "Intended Audience :: Science/Research",
    "Framework :: napari",
    "Topic :: Scientific/Engineering :: Image Processing",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Operating System :: OS Independent",
    "License :: OSI Approved :: BSD License",
]
dependencies = [
    "napari",
    "numpy",
    "qtpy",
    "scikit-image",
    "tifffile",
]

[project.optional-dependencies]
testing = [
    "tox",
    "pytest",  # https://docs.pytest.org/en/latest/contents.html
    "pytest-cov",  # https://pytest-cov.readthedocs.io/en/latest/
    "pytest-qt",  # https://pytest-qt.readthedocs.io/en/latest/
    "napari",
    "pyqt5",
]

[project.urls]
"Homepage" = "https://github.com/MMV-Lab/mmv-regionseg"
"Bug Tracker" = "https://github.com/MMV-Lab/mmv-regionseg/issues"
"Documentation" = "https://github.com/MMV-Lab/mmv-regionseg#README.md"
"Source Code" = "https://github.com/MMV-Lab/mmv-regionseg"
"User Support" = "https://github.com/MMV-Lab/mmv-regionseg/issues"

[tool.setuptools]
include-package-data = true

[tool.setuptools.packages.find]
where = ["src"]

[tool.setuptools.package-data]
"*" = ["*.yaml"]

[project.entry-points."napari.manifest"]
mmv-regionseg = "mmv_regionseg:napari.yaml"

[tool.bumpversion]
current_version = "0.3.0"
parse = "(?P<major>\\d+)\\.(?P<minor>\\d+)\\.(?P<patch>\\d+)"
serialize = ["{major}.{minor}.{patch}"]
search = "{current_version}"
replace = "{new_version}"
regex = false
ignore_missing_version = false
tag = false
sign_tags = false
tag_name = "v{new_version}"
tag_message = "Bump version: {current_version} → {new_version}"
allow_dirty = false
commit = true
message = "Bump version: {current_version} → {new_version}"
commit_args = ""

[[tool.bumpversion.files]]
filename = "pyproject.toml"
search = 'version = "{current_version}"'
replace = 'version = "{new_version}"'

[[tool.bumpversion.files]]
filename = "src/mmv_regionseg/__init__.py"
search = '__version__ = "{current_version}"'
replace = '__version__ = "{new_version}"'
