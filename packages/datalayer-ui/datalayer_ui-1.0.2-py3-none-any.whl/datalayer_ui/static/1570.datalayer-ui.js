"use strict";(self.webpackChunk_datalayer_ui=self.webpackChunk_datalayer_ui||[]).push([[1570],{61570:(e,t,s)=>{s.r(t),s.d(t,{default:()=>ne});var n=s(63711),r=s(43304),i=s(54904),a=s(80475),o=s(98238);const c=new o.Token("@jupyterlite/kernel:IKernels"),l=new o.Token("@jupyterlite/kernel:IKernelSpecs");var u=s(5552),g=s(97789),p=s(97777),d=s(81315),y=s(18565),h=s(80129);const v=d.supportedKernelWebSocketProtocols.v1KernelWebsocketJupyterOrg;class w{constructor(e){this._kernels=new u.E,this._clients=new u.E,this._kernelClients=new u.E;const{kernelspecs:t}=e;this._kernelspecs=t}async startNew(e){const{id:t,name:s,location:r}=e,i=this._kernelspecs.factories.get(s);if(!i)return{id:t,name:s};const a=new h.eu,c=(e,t,s)=>{var n;const r=this._kernels.get(e);if(!r)throw Error(`No kernel ${e}`);this._clients.set(t,s),null===(n=this._kernelClients.get(e))||void 0===n||n.add(t),s.on("message",(async e=>{let t;if(e instanceof ArrayBuffer)e=new Uint8Array(e).buffer,t=(0,p.deserialize)(e,v);else{if("string"!=typeof e)return;{const s=(new TextEncoder).encode(e);t=(0,p.deserialize)(s.buffer,v)}}"input_reply"===t.header.msg_type?r.handleMessage(t):(async e=>{await a.runExclusive((async()=>{await r.ready,await r.handleMessage(e)}))})(t)}));const i=()=>{var s;this._clients.delete(t),null===(s=this._kernelClients.get(e))||void 0===s||s.delete(t)};r.disposed.connect(i),s.onclose=i},l=null!=t?t:o.UUID.uuid4(),u=n.URLExt.join(w.WS_BASE_URL,g.KernelAPI.KERNEL_SERVICE_URL,encodeURIComponent(l),"channels"),d=this._kernels.get(l);if(d)return{id:d.id,name:d.name};const f=await i({id:l,sendMessage:e=>{const t=e.header.session,s=this._clients.get(t);if(!s)return void console.warn(`Trying to send message on removed socket for kernel ${l}`);const n=(0,p.serialize)(e,v);if("iopub"!==e.channel)s.send(n);else{const e=this._kernelClients.get(l);null==e||e.forEach((e=>{var t;null===(t=this._clients.get(e))||void 0===t||t.send(n)}))}},name:s,location:r});this._kernels.set(l,f),this._kernelClients.set(l,new Set);const S=new y.Server(u,{mock:!1,selectProtocol:()=>v});return S.on("connection",(e=>{var t;const s=null!==(t=new URL(e.url).searchParams.get("session_id"))&&void 0!==t?t:"";c(l,s,e)})),S.on("close",(()=>{this._clients.keys().forEach((e=>{var t;const s=this._clients.get(e);(null==s?void 0:s.readyState)===WebSocket.CLOSED&&(this._clients.delete(e),null===(t=this._kernelClients.get(l))||void 0===t||t.delete(e))}))})),f.disposed.connect((()=>{S.close(),this._kernels.delete(l),this._kernelClients.delete(l)})),{id:f.id,name:f.name}}async restart(e){const t=this._kernels.get(e);if(!t)throw Error(`Kernel ${e} does not exist`);const{id:s,name:n,location:r}=t;return t.dispose(),this.startNew({id:s,name:n,location:r})}async list(){return[...this._kernels.values()].map((e=>({id:e.id,name:e.name})))}async shutdown(e){var t;null===(t=this._kernels.delete(e))||void 0===t||t.dispose()}async get(e){return this._kernels.get(e)}}!function(e){e.WS_BASE_URL=n.PageConfig.getBaseUrl().replace(/^http/,"ws")}(w||(w={}));class f{constructor(){this._specs=new Map,this._factories=new Map}get specs(){return 0===this._specs.size?null:{default:this.defaultKernelName,kernelspecs:Object.fromEntries(this._specs)}}get defaultKernelName(){let e=n.PageConfig.getOption("defaultKernelName");if(!e&&this._specs.size){const t=Array.from(this._specs.keys());t.sort(),e=t[0]}return e||"javascript"}get factories(){return this._factories}register(e){const{spec:t,create:s}=e;this._specs.set(t.name,t),this._factories.set(t.name,s)}}const S="third-party-licenses.json",_=new o.Token("@jupyterlite/licenses:ILicenses"),k=Object.freeze({packages:[]});class m{async get(){return{bundles:{...await this._getFederated(),[this.appName]:await this._getAppLicenses()}}}get appName(){return n.PageConfig.getOption("appName")||"JupyterLite"}get appLicensesUrl(){return n.URLExt.join(n.PageConfig.getBaseUrl(),"build",S)}get labExtensionsUrl(){return n.PageConfig.getOption("fullLabextensionsUrl")}async _getAppLicenses(){let e=k;try{e=(await fetch(this.appLicensesUrl)).json()}catch(e){console.warn("Could not resolve licenses for",this.appName)}return e}async _getFederated(){const e={};let t;try{t=JSON.parse(n.PageConfig.getOption("federated_extensions"))}catch{return e}const s=[];for(const n of t)s.push(this._getOneFederated(n,e));try{await Promise.all(s)}catch(e){console.warn("Error resolving licenses",e)}return e}async _getOneFederated(e,t){try{const s=n.URLExt.join(this.labExtensionsUrl,e.name,"static",S),r=await fetch(s);t[e.name]=await r.json()}catch{console.warn("Could not resolve licenses for",e),t[e.name]=k}}}var N=s(34412),O=s(72490);const R=n.PageConfig.getOption("appVersion");class j{constructor(e){var t;this.unregisterOldServiceWorkers=e=>{const t=`${e}-version`,s=localStorage.getItem(t);(s&&s!==R||!s)&&(console.info("New version, unregistering existing service workers."),navigator.serviceWorker.getRegistrations().then((e=>{for(const t of e)t.unregister()})).then((()=>{console.info("All existing service workers have been unregistered.")}))),localStorage.setItem(t,R)},this._registration=null,this._registrationChanged=new O.Signal(this),this._ready=new o.PromiseDelegate;const s=null!==(t=null==e?void 0:e.workerUrl)&&void 0!==t?t:n.URLExt.join(n.PageConfig.getBaseUrl(),N.H),r=new URL(s,window.location.href),i=n.PageConfig.getOption("enableServiceWorkerCache")||"false";r.searchParams.set("enableCache",i),this.initialize(r.href).catch(console.warn)}get registrationChanged(){return this._registrationChanged}get enabled(){return null!==this._registration}get ready(){return this._ready.promise}async initialize(e){const{serviceWorker:t}=navigator;let s=null;if(t){if(t.controller){const e=t.controller.scriptURL;this.unregisterOldServiceWorkers(e),s=await t.getRegistration(e)||null,console.info("JupyterLite ServiceWorker was already registered")}}else console.warn("ServiceWorkers not supported in this browser");if(!s&&t)try{console.info("Registering new JupyterLite ServiceWorker",e),s=await t.register(e),console.info("JupyterLite ServiceWorker was sucessfully registered")}catch(e){console.warn(e),console.warn(`JupyterLite ServiceWorker registration unexpectedly failed: ${e}`)}this._setRegistration(s),s?this._ready.resolve(void 0):this._ready.reject(void 0)}_setRegistration(e){this._registration=e,this._registrationChanged.emit(this._registration)}}var J=s(32738),b=s(9877);const C=new o.Token("@jupyterlite/settings:ISettings");var x=s(91150);const L="JupyterLite Storage";class E{constructor(e){this._storageName=L,this._storageDrivers=null,this._localforage=e.localforage,this._storageName=e.storageName||L,this._storageDrivers=e.storageDrivers||null,this._ready=new o.PromiseDelegate}get ready(){return this._ready.promise}get storage(){return this.ready.then((()=>this._storage))}async initialize(){await this.initStorage(),this._ready.resolve(void 0)}async initStorage(){this._storage=this.defaultSettingsStorage()}get defaultStorageOptions(){var e;const t=(null===(e=this._storageDrivers)||void 0===e?void 0:e.length)?this._storageDrivers:null;return{version:1,name:this._storageName,...t?{driver:t}:{}}}defaultSettingsStorage(){return this._localforage.createInstance({description:"Offline Storage for Settings",storeName:"settings",...this.defaultStorageOptions})}async get(e){return(await this.getAll()).settings.find((t=>t.id===e))}async getAll(){const e=await this._getAll("all.json");let t=[];try{t=await this._getAll("all_federated.json")}catch{}const s=e.concat(t),n=await this.storage;return{settings:await Promise.all(s.map((async e=>{var t;const{id:s}=e,r=null!==(t=await n.getItem(s))&&void 0!==t?t:e.raw;return{...U.override(e),raw:r,settings:x.parse(r)}})))}}async save(e,t){await(await this.storage).setItem(e,t)}async _getAll(e){var t;const s=null!==(t=n.PageConfig.getOption("settingsUrl"))&&void 0!==t?t:"/";return await(await fetch(n.URLExt.join(s,e))).json()}}var U;!function(e){const t=JSON.parse(n.PageConfig.getOption("settingsOverrides")||"{}");e.override=function(e){if(t[e.id]){e.schema.properties||(e.schema.properties={});for(const[s,n]of Object.entries(t[e.id]||{}))e.schema.properties[s].default=n}return e}}(U||(U={}));const P=new o.Token("@jupyterlite/translation:ITranslation");class W{constructor(){this._prevLocale=""}async get(e){const t=n.URLExt.join(n.PageConfig.getBaseUrl(),`api/translations/${e}.json`);try{const s=await fetch(t),n=JSON.parse(await s.text());if("all"!==this._prevLocale&&"all"===e){const e=this._prevLocale;n.data[e].displayName=n.data[e].nativeName,"en"!==e&&(n.data.en.displayName=`${n.data.en.nativeName} (default)`)}return this._prevLocale=e,n}catch(t){return e?{data:{},message:`Language pack '${e}' not installed!`}:{data:{en:{displayName:"English",nativeName:"English"}},message:""}}}}var A=s(83015),I=s(49087),q=s.n(I);const D={id:"@jupyterlite/server-extension:localforage",autoStart:!0,provides:A.n,activate:e=>({localforage:q()})},z={id:"@jupyterlite/server-extension:localforage-memory-storage",autoStart:!0,requires:[A.n],activate:async(e,t)=>{JSON.parse(n.PageConfig.getOption("enableMemoryStorage")||"false")&&(console.warn("Memory storage fallback enabled: contents and settings may not be saved"),await(0,A.G)(t.localforage))}},K={id:"@jupyterlite/server-extension:config-section-routes",autoStart:!0,activate:e=>{const t={};e.router.get("/api/config/(.*)",(async(e,s)=>{var n;const r=null!==(n=t[s])&&void 0!==n?n:JSON.stringify({});return new Response(r)})),e.router.patch("/api/config/(.*)",(async(e,s)=>{const n=e.body;return t[s]=n,new Response(n)}))}},$={id:"@jupyterlite/server-extension:contents",requires:[A.n],autoStart:!0,provides:r.GJ,activate:(e,t)=>{const s=n.PageConfig.getOption("contentsStorageName"),r=JSON.parse(n.PageConfig.getOption("contentsStorageDrivers")||"null"),{localforage:a}=t,o=new i.v({storageName:s,storageDrivers:r,localforage:a});return e.started.then((()=>o.initialize().catch(console.warn))),o}},T={id:"@jupyterlite/server-extension:contents-routes",autoStart:!0,requires:[r.GJ],activate:(e,t)=>{e.router.get("/api/contents/(.+)/checkpoints",(async(e,s)=>{const n=await t.listCheckpoints(s);return new Response(JSON.stringify(n))})),e.router.post("/api/contents/(.+)/checkpoints/(.*)",(async(e,s,n)=>{const r=await t.restoreCheckpoint(s,n);return new Response(JSON.stringify(r),{status:204})})),e.router.post("/api/contents/(.+)/checkpoints",(async(e,s)=>{const n=await t.createCheckpoint(s);return new Response(JSON.stringify(n),{status:201})})),e.router.delete("/api/contents/(.+)/checkpoints/(.*)",(async(e,s,n)=>{const r=await t.deleteCheckpoint(s,n);return new Response(JSON.stringify(r),{status:204})})),e.router.get("/api/contents(.*)",(async(e,s)=>{var n;const r={content:"1"===(null===(n=e.query)||void 0===n?void 0:n.content)},i=await t.get(s,r);return i?new Response(JSON.stringify(i)):new Response(null,{status:404})})),e.router.post("/api/contents(.*)",(async(e,s)=>{const n=e.body,r=null==n?void 0:n.copy_from;let i;return i=r?await t.copy(r,s):await t.newUntitled(n),i?new Response(JSON.stringify(i),{status:201}):new Response(null,{status:400})})),e.router.patch("/api/contents(.*)",(async(e,s)=>{var n,r;const i=null!==(r=null===(n=e.body)||void 0===n?void 0:n.path)&&void 0!==r?r:"";s="/"===s[0]?s.slice(1):s;const a=await t.rename(s,i);return new Response(JSON.stringify(a))})),e.router.put("/api/contents/(.+)",(async(e,s)=>{const n=e.body,r=await t.save(s,n);return new Response(JSON.stringify(r))})),e.router.delete("/api/contents/(.+)",(async(e,s)=>(await t.delete(s),new Response(null,{status:204}))))}},M={id:"@jupyterlite/server-extension:service-worker",autoStart:!0,provides:N.u,activate:e=>new j},B={id:"@jupyterlite/server-extension:emscripten-filesystem",autoStart:!0,optional:[N.u],provides:r.LX,activate:(e,t)=>{const{contents:s}=e.serviceManager,n=new a.Y({contents:s}),r="Kernel filesystem and JupyterLite contents";function i(e,t){t&&console.warn(t),e&&console.warn(e),t||e?console.warn(`${r} will NOT be synced`):console.info(`${r} will be synced`)}return t?t.ready.then((()=>{n.enable(),i()})).catch((e=>{i("JupyterLite ServiceWorker failed to become available",e)})):i("JupyterLite ServiceWorker not available"),n}},F={id:"@jupyterlite/server-extension:kernels",autoStart:!0,provides:c,requires:[l],activate:(e,t)=>new w({kernelspecs:t})},G={id:"@jupyterlite/server-extension:kernels-routes",autoStart:!0,requires:[c],activate:(e,t)=>{e.router.get("/api/kernels",(async e=>{const s=await t.list();return new Response(JSON.stringify(s))})),e.router.post("/api/kernels/(.*)/restart",(async(e,s)=>{const n=await t.restart(s);return new Response(JSON.stringify(n))})),e.router.delete("/api/kernels/(.*)",(async(e,s)=>{const n=await t.shutdown(s);return new Response(JSON.stringify(n),{status:204})}))}},V={id:"@jupyterlite/server-extension:kernelspec",autoStart:!0,provides:l,activate:e=>new f},H={id:"@jupyterlite/server-extension:kernelspec-routes",autoStart:!0,requires:[l],activate:(e,t)=>{e.router.get("/api/kernelspecs",(async e=>{const{specs:s}=t;if(!s)return new Response(null);const n={},r=s.kernelspecs;Object.keys(r).forEach((e=>{const t=r[e],{resources:s}=null!=t?t:{};n[e]={name:e,spec:t,resources:s}}));const i={default:s.default,kernelspecs:n};return new Response(JSON.stringify(i))}))}},X={id:"@jupyterlite/server-extension:licenses",autoStart:!0,provides:_,activate:e=>new m},Y={id:"@jupyterlite/server-extension:licenses-routes",autoStart:!0,requires:[_],activate(e,t){e.router.get("/api/licenses",(async e=>{const s=await t.get();return new Response(JSON.stringify(s))}))}},Q={id:"@jupyterlite/server-extension:lsp-routes",autoStart:!0,activate:e=>{e.router.get("/lsp/status",(async e=>new Response(JSON.stringify({version:2,sessions:{},specs:{}}))))}},Z={id:"@jupyterlite/server-extension:nbconvert-routes",autoStart:!0,activate:e=>{e.router.get("/api/nbconvert",(async e=>new Response(JSON.stringify({}))))}},ee={id:"@jupyterlite/server-extension:sessions",autoStart:!0,provides:J.L,requires:[c],activate:(e,t)=>new b.A({kernels:t})},te={id:"@jupyterlite/server-extension:sessions-routes",autoStart:!0,requires:[J.L],activate:(e,t)=>{e.router.get("/api/sessions/(.+)",(async(e,s)=>{const n=await t.get(s);return new Response(JSON.stringify(n),{status:200})})),e.router.get("/api/sessions",(async e=>{const s=await t.list();return new Response(JSON.stringify(s),{status:200})})),e.router.patch("/api/sessions(.*)",(async(e,s)=>{const n=e.body,r=await t.patch(n);return new Response(JSON.stringify(r),{status:200})})),e.router.delete("/api/sessions/(.+)",(async(e,s)=>(await t.shutdown(s),new Response(null,{status:204})))),e.router.post("/api/sessions",(async e=>{const s=e.body,n=await t.startNew(s);return new Response(JSON.stringify(n),{status:201})}))}},se={id:"@jupyterlite/server-extension:settings",autoStart:!0,requires:[A.n],provides:C,activate:(e,t)=>{const s=n.PageConfig.getOption("settingsStorageName"),r=JSON.parse(n.PageConfig.getOption("settingsStorageDrivers")||"null"),{localforage:i}=t,a=new E({storageName:s,storageDrivers:r,localforage:i});return e.started.then((()=>a.initialize().catch(console.warn))),a}},ne=[K,$,T,B,F,G,V,H,X,Y,z,D,Q,Z,M,ee,te,se,{id:"@jupyterlite/server-extension:settings-routes",autoStart:!0,requires:[C],activate:(e,t)=>{const s="/api/settings/((?:@([^/]+?)[/])?([^/]+?):([^:]+))$";e.router.get(s,(async(e,s)=>{const n=await t.get(s);return new Response(JSON.stringify(n))})),e.router.put(s,(async(e,s)=>{const n=e.body,{raw:r}=n;return await t.save(s,r),new Response(null,{status:204})})),e.router.get("/api/settings",(async e=>{const s=await t.getAll();return new Response(JSON.stringify(s))}))}},{id:"@jupyterlite/server-extension:translation",autoStart:!0,provides:P,activate:e=>{const t=new W;return e.router.get("/api/translations/?(.*)",(async(e,s)=>{"default"===s&&(s="en");const n=await t.get(s||"all");return new Response(JSON.stringify(n))})),t}},{id:"@jupyterlite/server-extension:translation-routes",autoStart:!0,requires:[P],activate:(e,t)=>{e.router.get("/api/translations/?(.*)",(async(e,s)=>{const n=await t.get(s||"all");return new Response(JSON.stringify(n))}))}}]}}]);