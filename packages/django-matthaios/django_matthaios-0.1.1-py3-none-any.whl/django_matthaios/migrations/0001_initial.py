# Generated by Django 4.2.20 on 2025-03-25 09:20

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='CounterParty',
            fields=[
                ('id', models.PositiveIntegerField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
            ],
            options={
                'db_table_comment': 'Customers, suppliers etc.',
            },
        ),
        migrations.CreateModel(
            name='Documents',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table_comment': 'Documents may be connected to transactions and sales documents.',
            },
        ),
        migrations.CreateModel(
            name='Journal',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.CharField(blank=True, max_length=255)),
                ('type', models.CharField(blank=True, max_length=10)),
            ],
            options={
                'db_table_comment': 'A group of transactions that naturally belong together',
            },
        ),
        migrations.CreateModel(
            name='Party',
            fields=[
                ('id', models.PositiveIntegerField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('party_number', models.CharField(max_length=6, unique=True)),
            ],
            options={
                'db_table_comment': 'The starting point - the companies to which the transactions are stored.',
            },
        ),
        migrations.CreateModel(
            name='Transaction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('transaction_id', models.CharField(editable=False, max_length=50, unique=True)),
                ('transaction_type', models.CharField(choices=[('SALE', 'Sale'), ('PURCH', 'Purchase')], max_length=10)),
                ('date', models.DateField()),
                ('voucher_type', models.CharField(blank=True, max_length=10)),
                ('voucher_description', models.CharField(blank=True, max_length=255)),
                ('description', models.CharField(blank=True, max_length=255)),
                ('sequence', models.IntegerField(blank=True, null=True)),
                ('journal', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='django_matthaios.journal')),
            ],
        ),
        migrations.CreateModel(
            name='SalesDocument',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('counterparty', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='django_matthaios.counterparty')),
                ('transaction', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='django_matthaios.transaction')),
            ],
        ),
        migrations.CreateModel(
            name='PartySet',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('parties', models.ManyToManyField(to='django_matthaios.party')),
            ],
            options={
                'db_table_comment': 'Parties that naturally belong together, like a corporate group.',
            },
        ),
        migrations.CreateModel(
            name='Line',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('record_id', models.CharField(blank=True, max_length=50)),
                ('account_id', models.CharField(max_length=50)),
                ('amount', models.DecimalField(decimal_places=2, max_digits=15)),
                ('debit_credit', models.CharField(blank=True, choices=[('D', 'Debit'), ('C', 'Credit')], max_length=1)),
                ('description', models.CharField(blank=True, max_length=255)),
                ('transaction', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='django_matthaios.transaction')),
            ],
        ),
        migrations.AddField(
            model_name='journal',
            name='party',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='django_matthaios.party'),
        ),
        migrations.CreateModel(
            name='Address',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('adr1', models.CharField(blank=True, db_comment='StreetName', max_length=500, null=True)),
                ('adr2', models.CharField(blank=True, db_comment='AdditionalAddressDetail', max_length=500, null=True)),
                ('postal_code', models.CharField(blank=True, db_comment='PostalCode', max_length=20, null=True)),
                ('city', models.CharField(blank=True, db_comment='City', max_length=100, null=True)),
                ('region', models.CharField(blank=True, max_length=100, null=True)),
                ('country', models.CharField(blank=True, max_length=2, null=True)),
                ('type', models.CharField(choices=[('SA', 'StreetAddress'), ('PA', 'PostalAddress'), ('BA', 'BillingAddress'), ('ST', 'ShipToAddress'), ('SF', 'ShipFromAddress')], max_length=2)),
                ('is_default', models.BooleanField(default=False)),
                ('counterparty', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='addresses', to='django_matthaios.counterparty')),
                ('party', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='addresses', to='django_matthaios.party')),
            ],
        ),
        migrations.AddConstraint(
            model_name='address',
            constraint=models.CheckConstraint(check=models.Q(('party__isnull', False), ('counterparty__isnull', False), _connector='OR'), name='address_must_belong_to_party_or_counterparty'),
        ),
        migrations.AddConstraint(
            model_name='address',
            constraint=models.UniqueConstraint(condition=models.Q(('counterparty__isnull', True), ('is_default', True)), fields=('party', 'type'), name='unique_default_address_per_type_party'),
        ),
        migrations.AddConstraint(
            model_name='address',
            constraint=models.UniqueConstraint(condition=models.Q(('is_default', True), ('party__isnull', True)), fields=('counterparty', 'type'), name='unique_default_address_per_type_counterparty'),
        ),
    ]
