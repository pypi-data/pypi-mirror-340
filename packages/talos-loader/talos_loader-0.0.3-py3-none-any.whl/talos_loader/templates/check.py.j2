#!/usr/bin/env python3
# -*- coding: utf-8 -*-

import os
import sys
import subprocess


def get_directory_size(directory):
    try:
        result = subprocess.run(['du', '-sk', directory],
                                capture_output=True,
                                text=True,
                                check=True)
        size_kb = int(result.stdout.strip().split()[0])
        return size_kb * 1024
    except (subprocess.SubprocessError, ValueError, IndexError) as e:
        print(f"警告: 无法使用 du 命令计算目录大小: {e}")
        return _get_directory_size_python(directory)


def _get_directory_size_python(directory):
    total_size = 0
    for dirpath, dirnames, filenames in os.walk(directory):
        for filename in filenames:
            file_path = os.path.join(dirpath, filename)
            if not os.path.islink(file_path):
                total_size += os.path.getsize(file_path)
    return total_size


def format_size(size_bytes):
    for unit in ['B', 'KB', 'MB', 'GB']:
        if size_bytes < 1024.0 or unit == 'GB':
            return f"{size_bytes:.2f} {unit}"
        size_bytes /= 1024.0


def main():
    current_dir = os.getcwd()
    venv_dir = os.path.join(current_dir, '.venv')

    # 检查 .venv 目录是否存在
    if not os.path.exists(venv_dir):
        print(f"错误: .venv 目录不存在于 {current_dir}")
        print("请先创建虚拟环境")
        sys.exit(1)

    print(f"✓ .venv 目录已存在于 {current_dir}")

    venv_size = get_directory_size(venv_dir)
    venv_size_formatted = format_size(venv_size)

    current_dir_size = get_directory_size(current_dir)
    current_dir_size_formatted = format_size(current_dir_size)

    size_limit_bytes = 200 * 1024 * 1024

    print(f"当前目录大小: {current_dir_size_formatted}")
    print(f".venv 目录大小: {venv_size_formatted}")

    if venv_size > size_limit_bytes:
        print(f"警告: .venv 目录大小 ({venv_size_formatted}) 超过了打包上限 200MB")
        print("建议清理不必要的依赖或使用更轻量级的依赖")
    else:
        print(f"✓ .venv 目录大小 ({venv_size_formatted}) 在打包上限 200MB 以内")


if __name__ == "__main__":
    main()
