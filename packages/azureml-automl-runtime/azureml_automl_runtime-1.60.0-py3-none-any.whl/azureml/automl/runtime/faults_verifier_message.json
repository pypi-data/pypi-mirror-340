{
    "version": "1.0.0",
    "types": {
        "_missing_value": {
            "name": "Missing feature values imputation",
            "states": {
                "passed": "No feature missing values were detected in the training data.",
                "done": "If the missing values are expected, let the run complete. Otherwise cancel the current run and use a script to customize the handling of missing feature values that may be more appropriate based on the data type and business requirement.",
                "fixed": "The training data had the following missing values which were resolved. Please review your data source for data quality issues and possibly filter out the rows with these missing values. If the missing values are expected, you can either accept the above imputation, or implement your own custom imputation that may be more appropriate based on the data type and business process.",
                "alerted": "The training data contains missing values but no imputation is done. If missing values are not expected, cancel the current run to review your data for data quality issues or set the featurization setting for AutoML to handle the imputation."
            },
            "parameters": {
                "column_name": {
                    "name": "Column name"
                },
                "missing_value_count": {
                    "name": "Missing value count"
                },
                "imputation_type": {
                    "name": "Imputation type",
                    "values": {
                        "mean": "Mean",
                        "mode": "Mode"
                    }
                }
            },
            "learn_more": "Learn more about missing value imputation: https://aka.ms/AutomatedMLFeaturization",
            "parameter_preface": ""
        },
        "_insufficient_data_forecast_tcn": {
            "name": "Data size validation for TCNForecaster model",
            "states": {
                "passed": "The input data set has enough data points after pre-processing to train TCNForecaster model",
                "alerted": "The input data set does not have enough data points after pre-processing to train TCNForecaster model. The input dataset must have at least 500 data points for single time series data and 1000 data points for multiple time series data. Hence, this model will not be trained on the given data."
            },
            "parameters": {
                "row_counts": {
                    "name": "Rows count before pre-processing"
                },
                "row_counts_after_preprocessing": {
                    "name": "Rows count after pre-processing"
                }
            },
            "learn_more": "",
            "parameter_preface": "For training TCNForecaster model, the input dataset after pre-processing must have at least 500 data points for single time series data and 1000 data points for multiple time series data."
        },
        "_cross_validation": {
            "name": "Cross validation",
            "states": {
                "done": "In order to accurately evaluate the model(s) trained by AutoML, we leverage a dataset that the model is not trained on. Hence, if the user doesn't provide an explicit validation dataset, a part of the training dataset is used to achieve this. For smaller datasets (fewer than 20,000 samples), cross-validation is leveraged, else a single hold-out set is split from the training data to serve as the validation dataset. Hence, for your input data we leverage cross-validation with 10 folds, if the number of training samples are fewer than 1000, and 3 folds in all other cases."
            },
            "parameters": {
                "number_of_folds": {
                    "name": "Number of folds"
                }
            },
            "learn_more": "Learn more about cross validation: https://aka.ms/AutomatedMLCrossValidation",
            "parameter_preface": ""
        },
        "_train_test_split": {
            "name": "Train-Test data split",
            "states": {
                "done": "In order to accurately evaluate the model(s) trained by AutoML, we leverage a dataset that the model is not trained on. Hence, if the user doesn't provide an explicit validation dataset, a part of the training dataset is used to achieve this. For smaller datasets (fewer than 20,000 samples), cross-validation is leveraged, else a single hold-out set is split from the training data to serve as the validation dataset. Hence, your input data has been split into a training dataset and a holdout validation dataset."
            },
            "parameters": {
                "dataset": {
                    "name": "Dataset",
                    "values": {
                        "train": "Training dataset",
                        "test": "Test dataset"
                    }
                },
                "row_counts": {
                    "name": "Row counts"
                },
                "percentage": {
                    "name": "Percentage"
                }
            },
            "learn_more": "Learn more about validation data: https://aka.ms/AutomatedMLDataSplit",
            "parameter_preface": ""
        },
        "_detect_high_cardinal_feature": {
            "name": "High cardinality feature detection",
            "states": {
                "passed": "Your inputs were analyzed, and no high cardinality features were detected.",
                "done": "The training data had the following high cardinality features which were excluded for training. Please review your data source and possibly filter out these columns. If you want to include these features for training, you can override column purpose with appropriate column type."
            },
            "parameters": {
                "column_name": {
                    "name": "Column name"
                },
                "content_type": {
                    "name": "Column Content Type",
                    "values": {
                        "hashes": "Hashes"
                    }
                }
            },
            "learn_more": "Learn more about high cardinality feature handling: https://aka.ms/AutomatedMLFeaturization",
            "parameter_preface": "High cardinality features refer to columns that contain a large percentage of unique values."
        },
        "_class_balancing": {
            "name": "Class balancing detection",
            "states": {
                "passed": "Your inputs were analyzed, and all classes are balanced in your training data.",
                "alerted": "To decrease model bias, please cancel the current run and fix balancing problem.",
                "done": "A problem of class imbalance in your dataset has been detected and fixed."
            },
            "parameters": {
                "size_of_smallest_class": {
                    "name": "Size of the smallest class"
                },
                "name_of_smallest_class": {
                    "name": "Name/Label of the smallest class"
                },
                "num_of_samples": {
                    "name": "Number of samples in the training data"
                }
            },
            "learn_more": "Learn more about imbalanced data: https://aka.ms/AutomatedMLImbalancedData",
            "parameter_preface": "Imbalanced data can lead to a falsely perceived positive effect of a model's accuracy because the input data has bias towards one class."
        },
        "_timeseries_id_detection_utilities": {
            "name": "Time Series ID detection",
            "states": {
                "passed": "The data set was analyzed, and no duplicate time index were detected.",
                "fixed": "Multiple time series were found in the dataset, and the time series identifiers were automatically created for your dataset."
            },
            "parameters": {
                "number_of_duplicate_time_index": {
                    "name": "Number of duplicate time index"
                },
                "detected_time_series_id_column_names": {
                    "name": "Detected time series ID column names"
                }
            },
            "learn_more": "Learn more about time-series forecasting configurations: https://aka.ms/AutomatedMLForecastingConfiguration",
            "parameter_preface": "Time series id column names allows to distinguish the individual time series if the data set contains multiple series. If time series id column names is not defined or the key in these columns does not allow to identify all multi-series in the dataset, automatic time series id detection is performed."
        },
        "_rolling_window_features": {
            "name": "Memory Issues Detection",
            "states": {
                "passed": "The selected horizon and rolling window values were analyzed, and no potential memory issues were detected.",
                "done": "The selected horizon and rolling window values were analyzed and will potentially cause your experiment to run out of memory. The rolling window has been turned off. Please either increase the amount of memory or reduce the horizon value.",
                "fixed": "The selected horizon and rolling window values were analyzed and will potentially cause your experiment to run out of memory. The rolling window has been turned off. Please either increase the amount of memory or reduce the horizon value."
            },
            "learn_more": "Learn more about time-series forecasting configurations: https://aka.ms/AutomatedMLForecastingConfiguration",
            "parameter_preface": ""
        },
        "_lags_features": {
            "name": "Memory Issues Detection",
            "states": {
                "passed": "The selected horizon and lag values were analyzed, and no potential memory issues were detected.",
                "done": "The selected horizon and lag values were analyzed and will potentially cause your experiment to run out of memory. The lag has been turned off. Please either increase the amount of memory or reduce the horizon value.",
                "fixed": "The selected horizon and lag values were analyzed and will potentially cause your experiment to run out of memory. The lag has been turned off. Please either increase the amount of memory or reduce the horizon value."
            },
            "learn_more": "Learn more about time-series forecasting configurations: https://aka.ms/AutomatedMLForecastingConfiguration",
            "parameter_preface": ""
        },
        "_lookback_features": {
            "name": "Memory Issues Detection",
            "states": {
                "passed": "The selected horizon, lag and rolling window values were analyzed, and no potential memory issues were detected.",
                "done": "The selected horizon, lag and rolling window values were analyzed and will potentially cause your experiment to run out of memory. The lag and rolling window have been turned off. Please either increase the amount of memory or reduce the horizon value.",
                "fixed": "The selected horizon, lag and rolling window values were analyzed and will potentially cause your experiment to run out of memory. The lag and rolling window have been turned off. Please either increase the amount of memory or reduce the horizon value."
            },
            "learn_more": "Learn more about time-series forecasting configurations: https://aka.ms/AutomatedMLForecastingConfiguration",
            "parameter_preface": ""
        },
        "_timeseries_regularity": {
            "name": "Frequency detection",
            "states": {
                "passed": "The time series was analyzed, all data points are aligned with detected frequency.",
                "done": "The time series was analyzed and the data points which are not aligned with the detected frequency were found. These data points were removed from the data set.",
                "fixed": "The time series was analyzed and the data points which are not aligned with the detected frequency were found. These data points were removed from the data set."
            },
            "learn_more": "Learn more about data preparation for time-series forecasting: https://aka.ms/AutomatedMLDataPreparation",
            "parameter_preface": ""
        },
        "_timeseries_aggregation": {
            "name": "Time series aggregation",
            "states": {
                "passed": "The dataset frequency is aligned with the user specified frequency. No aggregation was performed.",
                "fixed": "The data was aggregated to comply with user provided frequency."
            },
            "parameters": {
                "series_freq": {
                    "name": "Frequency"
                },
                "aggregation_function": {
                    "name": "Aggregation function"
                }
            },
            "learn_more": "",
            "parameter_preface": ""
        },
        "_timeseries_short_series_handling": {
            "name": "Short series handling",
            "states": {
                "passed": "Automated ML detected enough data points for each series in the input data to continue with training.",
                "fixed": "Automated ML detected that some series did not contain enough data points to train a model. To continue with training, these short series have been dropped or padded."
            },
            "parameters": {
                "series_dropped": {
                    "name": "Number of series dropped"
                },
                "series_padded": {
                    "name": "Number of series padded"
                },
                "series_dropped_names": {
                    "name": "Names of dropped series"
                },
                "series_padded_names": {
                    "name": "Names of padded series"
                }
            },
            "learn_more": "Learn more about short series handling: https://aka.ms/AutomatedMLShortSeriesHandling",
            "parameter_preface": "Each series must have enough data points to successfully train a model. To avoid failures on these short series, automated ML will drop these series, or pad them by adding data points to the beginning of each of the series. If a series is dropped for training then a model will not produce predictions for those series."
        },
        "_timeseries_non_stationary_detection_and_handling": {
            "name": "Non-stationarity time series detection and handling",
            "states": {
                    "passed": "The data set was analyzed and passed stationarity checks.",
                    "fixed": "The first difference transformation was applied to mitigate the issues caused by non-stationarity of time series."
            },
            "learn_more": "",
            "parameter_preface": "The dataset is analyzed to check for stationarity since machine learning models inheritly can not deal with stochastic trends as a result they are impractical if such trends are present. If these stationary checks fail, we apply the first difference transformation to mitigate the issues caused by non-stationary time series."
        },    
        "_timeseries_automatic_cross_validation": {
            "name": "Automatic cross validation",
            "states": {
                "done": "Cross validation parameter(s) were automatically set for your dataset."
            },
            "parameters": {
                "number_of_folds": {
                    "name": "Number of cross validation folds"
                },
                "cv_step_size": {
                    "name": "Number of periods between two consecutive cross validation folds"
                }
            },
            "learn_more": "Learn more about time-series forecasting configurations: https://aka.ms/AutomatedMLForecastingConfiguration",
            "parameter_preface": "If n_cross_validations and/or cv_step_size is not specified, Automated ML will determine those cross validation parameters automatically for you."
        },
        "_timeseries_unique_target_grains": {
            "name": "Unique target series handling",
            "states": {
                    "fixed": "All series of the dataset contains unique targets. To avoid failure, a perturbation is added for the target values.",
                    "alerted": "Some of the series contains unique targets. Those grains will be neglected during training and naive model will be applied to those series when doing forecast."
            },
            "parameters": {
                "unique_target_series": {
                    "name": "Name of unique target series"
                }
            },
            "learn_more": "",
            "parameter_preface": "Each series must have more than 1 unique target values to successfully train a model. To avoid failures on these short series, automated ML will drop these series or add perturbation. If a series is dropped for training then a naive model will be added to forecast those series."
        }
    }
}