[build-system]
requires = ["setuptools>=61.0.0", "wheel", "setuptools-ocrd"]

[project]
name = "ocrd_pagetopdf"
authors = [
    {name = "Jan Kamlah", email = "jan.kamlah@uni-mannheim.de"},
    {name = "Robert Sachunsky", email = "robert.sachunsky@slub-dresden.de"},
]
description = "OCR-D wrapper for prima-pagetopdf"
readme = "README.md"
license.file = "LICENSE"
requires-python = ">=3.8"
keywords = ["ocr", "ocr-d", "page-xml"]

dynamic = ["version", "dependencies"]

# https://pypi.org/classifiers/
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Environment :: Console",
    "Intended Audience :: Science/Research",
    "Intended Audience :: Other Audience",
    "License :: OSI Approved :: GNU General Public License v3 (GPLv3)",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3 :: Only",
    "Topic :: Text Processing",
]

[project.scripts]
ocrd-pagetopdf = "ocrd_pagetopdf.cli:ocrd_pagetopdf"
ocrd-altotopdf = "ocrd_pagetopdf.cli:ocrd_altotopdf"

[project.urls]
Homepage = "https://github.com/OCR-D/ocrd_pagetopdf"
Repository = "https://github.com/OCR-D/ocrd_pagetopdf.git"

[tool.setuptools]
# It is not possible anymore to use autodiscovery, because other directories
# (repo/) will abort flat-layout detection.
# However, neither is it possible to use packages.find (with include/exclude),
# because it fails to accept pure data directories (lib/, data/).
# Hence this clumsy manual enumeration:
packages = ["ocrd_pagetopdf", "ocrd_pagetopdf.lib", "ocrd_pagetopdf.data"]

[tool.setuptools.dynamic]
dependencies = {file = ["requirements.txt"]}
optional-dependencies.test = {file = ["requirements-test.txt"]}

[tool.setuptools.package-data]
"*" = ["PageToPdf.jar", "*.txt", "ocrd-tool.json"]
"ocrd_pagetopdf.data" = ["*.ttf", "*.otf"]
"ocrd_pagetopdf.lib" = ["*.jar"]

[tool.mypy]
plugins = ["numpy.typing.mypy_plugin"]
ignore_missing_imports = true
strict = true
disallow_subclassing_any = false
# ‚ùó error: Class cannot subclass "Processor" (has type "Any")
disallow_any_generics = false
disallow_untyped_defs = false
disallow_untyped_calls = false

[tool.coverage.run]
branch = true
source = [
    "ocrd_pagetopdf"
]
concurrency = [
    "thread",
    "multiprocessing"
]

[tool.coverage.report]
exclude_also = [
    "if self\\.debug",
    "pragma: no cover",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
]
ignore_errors = true
omit = [
    "ocrd_pagetopdf/cli.py"
]
