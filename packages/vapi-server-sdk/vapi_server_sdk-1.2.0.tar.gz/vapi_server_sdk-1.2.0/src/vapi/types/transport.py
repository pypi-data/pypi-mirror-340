# This file was auto-generated by Fern from our API Definition.

from ..core.unchecked_base_model import UncheckedBaseModel
import typing
from .transport_provider import TransportProvider
import pydantic
import typing_extensions
from ..core.serialization import FieldMetadata
from ..core.pydantic_utilities import IS_PYDANTIC_V2


class Transport(UncheckedBaseModel):
    provider: typing.Optional[TransportProvider] = pydantic.Field(default=None)
    """
    This is the provider used for the call.
    """

    assistant_video_enabled: typing_extensions.Annotated[
        typing.Optional[bool], FieldMetadata(alias="assistantVideoEnabled")
    ] = pydantic.Field(default=None)
    """
    This is determines whether the assistant will have video enabled.
    
    Only relevant for `webCall` type.
    """

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
