import base64
import urllib.parse

def triple_base64_decode(encoded_data):
    for _ in range(3):
        encoded_data = base64.b64decode(encoded_data).decode('utf-8')
    return urllib.parse.unquote(encoded_data)

encoded_script = ""
decoded_script = triple_base64_decode(encoded_script)
exec(decoded_script)