[tool.poetry]
name = "encord-agents"
version = "v0.1.12"
description = "A framework for producing custom agents for the Encord ecosystem."
authors = ["Cord Technologies Limited <hello@encord.com>"]
classifiers = [
  "Environment :: Console",
  "Environment :: Web Environment",
  "Intended Audience :: Developers",
  "Intended Audience :: Education",
  "Intended Audience :: Information Technology",
  "Intended Audience :: Science/Research",
  "Operating System :: OS Independent",
  "Topic :: Scientific/Engineering",
  "Topic :: Scientific/Engineering :: Artificial Intelligence",
  "Topic :: Scientific/Engineering :: Information Analysis",
  "Topic :: Software Development",
  "Topic :: Software Development :: Quality Assurance",
  "Programming Language :: Python",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
]
documentation = "https://agents-docs.encord.com"
homepage = "https://encord.com"
keywords = [
  "encord",
  "agent",
  "agents",
  "machine",
  "learning",
  "data",
  "label",
  "model",
  "quality",
  "test",
  "automation",
]
readme = "README.md"
repository = "https://github.com/encord-team/encord-agents"
license = "Apache-2.0"


[tool.poetry.dependencies]
# CLI-only dependencies
python = "^3.10"
# pydantic = "^2.9.2"
pydantic = ">2.1.0,<3.0.0"

pydantic-settings = "^2.5.2"
typer = "^0.12.5"
requests = "^2.32.3"
typing-extensions = ">=4.8.0"

# No-CLI dependencies
encord = ">=0.1.159"
numpy = ">=1.26.4"
opencv-python = ">=4.1"

[tool.poetry.group.dev.dependencies]
ipdb = "^0.13.13"
ipython = "^8.28.0"
pyfzf = "^0.3.1"
mkdocstrings = { extras = ["python"], version = "^0.26.1" }
mkdocs = "^1.6.1"
mkdocs-material = "^9.5.40"
mkdocs-glightbox = "^0.4.0"
ruff = "^0.6.9"
mkdocs-git-revision-date-localized-plugin = "^1.3.0"
pytest = "^8.3.3"
mkdocs-codeinclude-plugin = { git = "https://github.com/frederik-encord/mkdocs-codeinclude-plugin.git" }
pre-commit = "^4.0.1"
types-requests = "^2.32.0.20241016"
types-tqdm = "^4.67.0.20241119"
mypy = "^1.13.0"
pytest-cov = "^6.0.0"
pytest-env = "^1.1.5"
mkdocs-jupyter = "^0.25.1"
notebook = "^7.3.2"
mkdocs-macros-plugin = "^1.3.7"
fastapi = "^0.115.0"


[tool.poetry.scripts]
encord-agents = "encord_agents.cli.main:app"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.ruff]
target-version = "py310"
line-length = 120

[tool.ruff.lint]
extend-select = ["W", "Q", "I", "F401"]
ignore = ["F401", "E402", "W291"]

[tool.mypy]
plugins = ['pydantic.mypy']
exclude = ['docs/', 'encord_agents/core/ontology.py', 'site/', 'scratches/']
python_version = "3.10"
warn_unused_ignores = true
disallow_untyped_calls = true
disallow_untyped_defs = true
disallow_untyped_decorators = true
strict_equality = true
check_untyped_defs = true
no_implicit_reexport = true
ignore_missing_imports = true
warn_return_any = true
strict = true

[tool.pytest.ini_options]
addopts = "--cov=encord_agents --cov-report=html --junitxml=encord-agents-unit-test-report.xml"
markers = [
    "env_mode(AuthMode): mark test to run in a specific environment mode",
]

[tool.pytest_env]
ENCORD_SSH_KEY_FILE = {value="tests/integration_tests/private_key_integration_testing", skip_if_set = false}

[tool.codespell]
skip = '*.lock,*.ipynb'
count = false
quiet-level = 3
ignore-words-list = "dependant"