Metadata-Version: 2.4
Name: tulgatts
Version: 0.1.0.post2
Summary: TulgaTTS is an AI-based TTS library for generating speech with various voices popular in the region of Kazakhstan
Home-page: https://github.com/dauitsuragan002/tulgatts
Author: David Suragan
Author-email: dauitsuragan002@gmail.com
Classifier: Programming Language :: Python :: 3
Classifier: License :: OSI Approved :: MIT License
Classifier: Operating System :: OS Independent
Requires-Python: >=3.8
Description-Content-Type: text/markdown
License-File: LICENSE
Requires-Dist: PyCharacterAI>=0.2.0
Requires-Dist: requests>=2.20.0
Requires-Dist: python-dotenv>=0.10.0
Provides-Extra: audio
Requires-Dist: pygame>=2.0.0; extra == "audio"
Dynamic: author
Dynamic: author-email
Dynamic: classifier
Dynamic: description
Dynamic: description-content-type
Dynamic: home-page
Dynamic: license-file
Dynamic: provides-extra
Dynamic: requires-dist
Dynamic: requires-python
Dynamic: summary

# TulgaTTS
**TulgaTTS - “ö–∞–∑–∞“õ—Å—Ç–∞–Ω–¥–∞ —Ç–∞–Ω—ã–º–∞–ª ”ô—Ä —Ç“Ø—Ä–ª—ñ –¥–∞—É—ã—Å—Ç–∞—Ä–º–µ–Ω –º”ô—Ç—ñ–Ω–¥—ñ —Å”©–π–ª–µ—Ç—É–≥–µ –∞—Ä–Ω–∞–ª“ì–∞–Ω –∫—ñ—Ç–∞–ø—Ö–∞–Ω–∞.**

## –û—Ä–Ω–∞—Ç—É

```bash
# Pip –∞—Ä“õ—ã–ª—ã (–±–æ–ª–∞—à–∞“õ—Ç–∞)
pip install tulgatts
# –ê—É–¥–∏–æ –æ–π–Ω–∞—Ç—É “Ø—à—ñ–Ω (–æ–ø—Ü–∏–æ–Ω–∞–ª–¥—ã):
pip install -e .[audio]
```

## –ñ“±–º—ã—Å—Ç—ã –±–∞—Å—Ç–∞—É

1.  **–¢–æ–∫–µ–Ω–¥—ñ –∞–ª—É:**
    *   ‚ö†Ô∏è **–¢–û–ö–ï–ù–î–Ü –ë”®–õ–Ü–°–ü–ï“¢–Ü–ó!** –ë“±–ª —Å—ñ–∑–¥—ñ“£ –∞–∫–∫–∞—É–Ω—Ç—ã“£—ã–∑–¥–∞–Ω —Å“±—Ä–∞—É–ª–∞—Ä –∂—ñ–±–µ—Ä—É “Ø—à—ñ–Ω “õ–∞–∂–µ—Ç.
    *   –ë—Ä–∞—É–∑–µ—Ä—ñ“£—ñ–∑–¥–µ **Developer Tools** (”ò–∑—ñ—Ä–ª–µ—É—à—ñ “õ“±—Ä–∞–ª–¥–∞—Ä—ã) –∞—à—ã“£—ã–∑ (–∫”©–±—ñ–Ω–µ—Å–µ F12 –ø–µ—Ä–Ω–µ—Å—ñ).
    *   **Storage** (–°–∞“õ—Ç–∞—É –æ—Ä–Ω—ã) “õ–æ–π—ã–Ω–¥—ã—Å—ã–Ω–∞ ”©—Ç—ñ“£—ñ–∑ (–∫–µ–π–¥–µ **Application** –Ω–µ–º–µ—Å–µ **Application Storage** –¥–µ–ø –∞—Ç–∞–ª—É—ã –º“Ø–º–∫—ñ–Ω).
    *   –°–æ–ª –∂–∞“õ—Ç–∞“ì—ã –º”ô–∑—ñ—Ä–¥–µ–Ω **Local Storage** —Ç–∞—Ä–º–∞“ì—ã–Ω —Ç–∞—É—ã–ø, –∞—Å—Ç—ã–Ω–¥–∞“ì—ã character.ai —Å–∞–π—Ç—ã–Ω —Ç–∞“£–¥–∞“£—ã–∑.
    *   –û“£ –∂–∞“õ—Ç–∞“ì—ã —Ç—ñ–∑—ñ–º–Ω–µ–Ω `char_token` –∫—ñ–ª—Ç—ñ–Ω —Ç–∞–±—ã“£—ã–∑.
    *   –û–Ω—ã“£ –º”ô–Ω—ñ–Ω (`Value`) –∫”©—à—ñ—Ä—ñ–ø –∞–ª—ã“£—ã–∑. –ë“±–ª —Å—ñ–∑–¥—ñ“£ —Ç–æ–∫–µ–Ω—ñ“£—ñ–∑.
    *   `CHARACTER_AI_TOKEN` –æ—Ä—Ç–∞ –∞–π–Ω—ã–º–∞–ª—ã—Å—ã–Ω –æ—Ä–Ω–∞—Ç—ã“£—ã–∑ –Ω–µ–º–µ—Å–µ –∂–æ–±–∞ —Ç“Ø–±—ñ—Ä—ñ–Ω–¥–µ `.env` —Ñ–∞–π–ª—ã–Ω –∂–∞—Å–∞–ø, —ñ—à—ñ–Ω–µ `CHARACTER_AI_TOKEN=—Å—ñ–∑–¥—ñ“£_–∫”©—à—ñ—Ä—ñ–ø_–∞–ª“ì–∞–Ω_—Ç–æ–∫–µ–Ω—ñ“£—ñ–∑` –¥–µ–ø –∂–∞–∑—ã“£—ã–∑.

2.  –ö—ñ—Ç–∞–ø—Ö–∞–Ω–∞–Ω—ã “õ–æ–ª–¥–∞–Ω—ã“£—ã–∑.

## “ö–æ–ª–¥–∞–Ω—É –ú—ã—Å–∞–ª–¥–∞—Ä—ã

–ö—ñ—Ç–∞–ø—Ö–∞–Ω–∞–Ω—ã “õ–æ–ª–¥–∞–Ω—É–¥—ã“£ –±—ñ—Ä–Ω–µ—à–µ –∂–æ–ª—ã –±–∞—Ä. “ö–∞—Ä–∞–ø–∞–π—ã–º —Å–∫—Ä–∏–ø—Ç—Ç–µ—Ä “Ø—à—ñ–Ω —Å–∏–Ω—Ö—Ä–æ–Ω–¥—ã ”ô–¥—ñ—Å—Ç—ñ, –∞–ª –∞—Å–∏–Ω—Ö—Ä–æ–Ω–¥—ã “õ–æ—Å—ã–º—à–∞–ª–∞—Ä “Ø—à—ñ–Ω `async`/`await` ”ô–¥—ñ—Å—ñ–Ω “õ–æ–ª–¥–∞–Ω—É“ì–∞ –±–æ–ª–∞–¥—ã.

### 1. –ï“£ “õ–∞—Ä–∞–ø–∞–π—ã–º “õ–æ–ª–¥–∞–Ω—É ”ô–¥—ñ—Å—ñ. 

```python
# “ö–∞–∂–µ—Ç—Ç—ñ –∏–º–ø–æ—Ä—Ç—Ç–∞—Ä
from tulgatts import TulgaTTS

# –ö–ª–∏–µ–Ω—Ç—Ç—ñ –∂–∞—Å–∞—É (”ô–¥–µ–ø–∫—ñ –¥–∞—É—ã—Å ‚Äì Tokaev)
client = TulgaTTS(api_token="CHARACTER_AI_TOKEN", voice="Tokaev")

# 1. ”ò–¥–µ–ø–∫—ñ –¥–∞—É—ã—Å–ø–µ–Ω —Å”©–π–ª–µ—É –∂”ô–Ω–µ —Ñ–∞–π–ª“ì–∞ —Å–∞“õ—Ç–∞—É
client.say("–ë“±–ª –∫–ª–∞—Å—Å –∞—Ä“õ—ã–ª—ã –∂–∞—Å–∞–ª“ì–∞–Ω –º—ã—Å–∞–ª")

```

### 2. C–∏–Ω—Ö—Ä–æ–Ω–¥—ã “õ–æ–ª–¥–∞–Ω—É

```python
import os
from tulgatts import TulgaTTS
from dotenv import load_dotenv

# .env —ñ—à—ñ–Ω–µ–Ω —Ç–æ–∫–µ–Ω–¥—ñ –∂“Ø–∫—Ç–µ–π–º—ñ–∑
load_dotenv()
api_token = os.getenv("CHARACTER_AI_TOKEN")

def sync_say_usage():
    if not api_token:
        print("‚ùå –¢–æ–∫–µ–Ω –∂–æ“õ!")
        return

    try:
        # –ö–ª–∏–µ–Ω—Ç –∂–∞—Å–∞—É
        tts_client = TulgaTTS(api_token=api_token, voice='Tokaev')
        print(f"‚úÖ –ö–ª–∏–µ–Ω—Ç '{tts_client.voice}' –¥–∞—É—ã—Å—ã–Ω–∞ –¥–∞–π—ã–Ω.")

        # ”ò–¥–µ–ø–∫—ñ –¥–∞—É—ã—Å–ø–µ–Ω —Å–∏–Ω—Ö—Ä–æ–Ω–¥—ã —Å”©–π–ª–µ—Ç—É
        tts_client.say("–°–∏–Ω—Ö—Ä–æ–Ω–¥—ã –º—ã—Å–∞–ª.", output_file="sync_example.mp3")
        print("üéß –§–∞–π–ª –¥–∞–π—ã–Ω: sync_example.mp3")

    except Exception as e:
        print(f"‚ö†Ô∏è “ö–∞—Ç–µ –æ—Ä—ã–Ω –∞–ª–¥—ã: {e}")

if __name__ == "__main__":
    print("2. –°–∏–Ω—Ö—Ä–æ–Ω–¥—ã –º—ã—Å–∞–ª...")
    sync_say_usage()
    print("-" * 20)

```

### 3. –ê–Ω—Å–∏–Ω—Ö—Ä–æ–Ω–¥—ã “õ–æ–ª–¥–∞–Ω—É

```python

import os, asyncio
from tulgatts import TulgaTTS
from dotenv import load_dotenv

# .env —ñ—à—ñ–Ω–µ–Ω —Ç–æ–∫–µ–Ω–¥—ñ –∂“Ø–∫—Ç–µ–π–º—ñ–∑
load_dotenv()
api_token = os.getenv("CHARACTER_AI_TOKEN")

async def advanced_async_say():
    if not api_token: return print("–¢–æ–∫–µ–Ω –∂–æ“õ!")
    
    try:
        tts_client = TulgaTTS(api_token=api_token)
        print(f"–ö–ª–∏–µ–Ω—Ç '{tts_client.voice}' –¥–∞—É—ã—Å—ã–º–µ–Ω –¥–∞–π—ã–Ω.")
        await tts_client.say_async("“Æ—à—ñ–Ω—à—ñ –º—ã—Å–∞–ª, –±—ñ—Ä—ñ–Ω—à—ñ –±”©–ª—ñ–º.", voice="Tokaev", output_file="advanced_async1.mp3", play_audio=True)
    except Exception as e: print(f"“ö–∞—Ç–µ: {e}")

if __name__ == "__main__":
    print("\n3. –ö“Ø—Ä–¥–µ–ª—ñ—Ä–µ–∫ –∞—Å–∏–Ω—Ö—Ä–æ–Ω–¥—ã –º—ã—Å–∞–ª...")
    asyncio.run(advanced_async_say())
    print("–ë–∞—Ä–ª—ã“õ –º—ã—Å–∞–ª–¥–∞—Ä –∞—è“õ—Ç–∞–ª–¥—ã.")

```

## “ö–æ–ª–∂–µ—Ç—ñ–º–¥—ñ –î–∞—É—ã—Å—Ç–∞—Ä

–ö—ñ—Ç–∞–ø—Ö–∞–Ω–∞–¥–∞ –∫–µ–ª–µ—Å—ñ –¥–∞—É—ã—Å—Ç–∞—Ä –∞–ª–¥—ã–Ω –∞–ª–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è–ª–∞–Ω“ì–∞–Ω:

*   Nursultan Nazarbaev
*   Tokaev
*   Pavel Durov
*   Nurlan Saburov
*   Putin
*   Skriptonit
*   Elon Musk
*   Albert E
*   Yandex Alica
*   J.A.R.V.I.S
*   Tony Stark

–°—ñ–∑ –∫“Ø—Ç–∫–µ–Ω –º”ô—Ç—ñ–Ω–¥—ñ TulgaTTS –¥—ã–±—ã—Å—Ç–∞–º–∞—É—ã –º“Ø–º–∫—ñ–Ω –µ–∫–µ–Ω—ñ–Ω –µ–∫—Å–µ—Ä—Ç–µ–º—ñ–Ω. “ö–∞–∑—ñ—Ä —Å–æ–ª –º”ô—Å–µ–ª–µ–Ω—ñ —à–µ—à—É –±–æ–π—ã–Ω—à–∞ –∂“±–º—ã—Å –∂“Ø—Ä—ñ–ø –∂–∞—Ç—ã—Ä.

–†–∞“õ–º–µ—Ç—ñ–º–¥—ñ –æ—Å—ã –∂—ñ–≥—ñ—Ç–∫–µ –∞–π—Ç–∞–º—ã–Ω
[PyCharacterAI](https://github.com/Xtr4F/PyCharacterAI) –∞—Ä“õ—ã–ª—ã Character AI –¥–∞—É—ã—Å—Ç–∞—Ä—ã–º–µ–Ω –º”ô—Ç—ñ–Ω–¥—ñ —Å”©–π–ª–µ—Ç—É (TTS). 

## –ê–≤—Ç–æ—Ä–ª–∞—Ä
- David Suragan (TulgaTTS)
- Gemini AI

## –õ–∏—Ü–µ–Ω–∑–∏—è
MIT 
