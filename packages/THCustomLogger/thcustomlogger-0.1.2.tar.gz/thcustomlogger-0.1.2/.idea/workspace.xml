<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="SELECTIVE" />
  </component>
  <component name="ChangeListManager">
    <list default="true" id="9f76e348-4220-4d67-b63b-d36f23fd8850" name="Changes" comment="Add detailed instructions for uploading packages to PyPI&#10;&#10;This documentation outlines the step-by-step process for building, testing, and publishing Python packages to PyPI. It includes prerequisites, tool updates, cleanup steps, and best practices for a smooth package upload workflow." />
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="FileTemplateManagerImpl">
    <option name="RECENT_TEMPLATES">
      <list>
        <option value="Python Script" />
      </list>
    </option>
  </component>
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="GitHubPullRequestSearchHistory">{
  &quot;lastFilter&quot;: {
    &quot;state&quot;: &quot;OPEN&quot;,
    &quot;assignee&quot;: &quot;TabgoHotel&quot;
  }
}</component>
  <component name="GithubPullRequestsUISettings">{
  &quot;selectedUrlAndAccountId&quot;: {
    &quot;url&quot;: &quot;https://github.com/TabgoHotel/CustomLogger.git&quot;,
    &quot;accountId&quot;: &quot;ba1fa2a0-f1fb-4751-9c86-b5245a520836&quot;
  }
}</component>
  <component name="ProjectColorInfo">{
  &quot;associatedIndex&quot;: 1
}</component>
  <component name="ProjectId" id="2vYvlQhzj4XA6x2qyeH8ZIx3mQ8" />
  <component name="ProjectLevelVcsManager" settingsEditedManually="true" />
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent"><![CDATA[{
  "keyToString": {
    "Python.logger_setup.executor": "Run",
    "RunOnceActivity.ShowReadmeOnStart": "true",
    "RunOnceActivity.git.unshallow": "true",
    "git-widget-placeholder": "main",
    "node.js.detected.package.eslint": "true",
    "node.js.detected.package.tslint": "true",
    "node.js.selected.package.eslint": "(autodetect)",
    "node.js.selected.package.tslint": "(autodetect)",
    "nodejs_package_manager_path": "npm",
    "settings.editor.selected.configurable": "Errors",
    "vue.rearranger.settings.migration": "true"
  }
}]]></component>
  <component name="RecentsManager">
    <key name="MoveFile.RECENT_KEYS">
      <recent name="$USER_HOME$/" />
      <recent name="$PROJECT_DIR$" />
      <recent name="$PROJECT_DIR$/src/customlogger" />
    </key>
  </component>
  <component name="SharedIndexes">
    <attachedChunks>
      <set>
        <option value="bundled-js-predefined-d6986cc7102b-1632447f56bf-JavaScript-PY-243.26053.29" />
        <option value="bundled-python-sdk-b1dbf8ef85a6-4df51de95216-com.jetbrains.pycharm.pro.sharedIndexes.bundled-PY-243.26053.29" />
      </set>
    </attachedChunks>
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="9f76e348-4220-4d67-b63b-d36f23fd8850" name="Changes" comment="" />
      <created>1744334972790</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1744334972790</updated>
      <workItem from="1744334973837" duration="2400000" />
      <workItem from="1744337383264" duration="272000" />
      <workItem from="1744501665438" duration="7295000" />
    </task>
    <task id="LOCAL-00001" summary="Add initial implementation of custom logging package&#10;&#10;This commit introduces a custom logging package with multiline and colored formatting. It includes setup scripts (`setup.py`, `pyproject.toml`), dependency management files (`requirements.txt`), and logging setup with support for git metadata retrieval. The package provides advanced logging capabilities for enhanced debugging and readability.">
      <option name="closed" value="true" />
      <created>1744336022654</created>
      <option name="number" value="00001" />
      <option name="presentableId" value="LOCAL-00001" />
      <option name="project" value="LOCAL" />
      <updated>1744336022654</updated>
    </task>
    <task id="LOCAL-00002" summary="Add initial implementation of custom logging package&#10;&#10;This commit introduces a custom logging package with multiline and colored formatting. It includes setup scripts (`setup.py`, `pyproject.toml`), dependency management files (`requirements.txt`), and logging setup with support for git metadata retrieval. The package provides advanced logging capabilities for enhanced debugging and readability.">
      <option name="closed" value="true" />
      <created>1744337203524</created>
      <option name="number" value="00002" />
      <option name="presentableId" value="LOCAL-00002" />
      <option name="project" value="LOCAL" />
      <updated>1744337203524</updated>
    </task>
    <task id="LOCAL-00003" summary="Rename and restructure project to THCustomLogger&#10;&#10;Updated the project structure and renamed it to THCustomLogger. Migrated from `setup.py` to `pyproject.toml` using Hatch as the build system. Added a proper license file and enhanced the README with installation and usage details.">
      <option name="closed" value="true" />
      <created>1744507409584</created>
      <option name="number" value="00003" />
      <option name="presentableId" value="LOCAL-00003" />
      <option name="project" value="LOCAL" />
      <updated>1744507409584</updated>
    </task>
    <task id="LOCAL-00004" summary="Add detailed instructions for uploading packages to PyPI&#10;&#10;This documentation outlines the step-by-step process for building, testing, and publishing Python packages to PyPI. It includes prerequisites, tool updates, cleanup steps, and best practices for a smooth package upload workflow.">
      <option name="closed" value="true" />
      <created>1744508962580</created>
      <option name="number" value="00004" />
      <option name="presentableId" value="LOCAL-00004" />
      <option name="project" value="LOCAL" />
      <updated>1744508962580</updated>
    </task>
    <option name="localTasksCounter" value="5" />
    <servers />
  </component>
  <component name="TypeScriptGeneratedFilesManager">
    <option name="version" value="3" />
  </component>
  <component name="VcsManagerConfiguration">
    <MESSAGE value="Add initial implementation of custom logging package&#10;&#10;This commit introduces a custom logging package with multiline and colored formatting. It includes setup scripts (`setup.py`, `pyproject.toml`), dependency management files (`requirements.txt`), and logging setup with support for git metadata retrieval. The package provides advanced logging capabilities for enhanced debugging and readability." />
    <MESSAGE value="Migrate project to Hatchling and restructure package&#10;&#10;Replaced setuptools with Hatchling as the build system in `pyproject.toml`. Renamed package to `THCustomLogger` and reorganized the project structure. Added LICENSE file and updated `__init__.py` with new functionalities." />
    <MESSAGE value="Rename and restructure the logging package&#10;&#10;Renamed the package to &quot;THCustomLogger&quot; and restructured the project. Migrated `setup.py` to `pyproject.toml` for modern packaging using Hatchling. Added a LICENSE file and updated the README with installation, usage, and features." />
    <MESSAGE value="Rename and restructure project to THCustomLogger&#10;&#10;Updated the project structure and renamed it to THCustomLogger. Migrated from `setup.py` to `pyproject.toml` using Hatch as the build system. Added a proper license file and enhanced the README with installation and usage details." />
    <MESSAGE value="Add detailed instructions for uploading packages to PyPI&#10;&#10;This documentation outlines the step-by-step process for building, testing, and publishing Python packages to PyPI. It includes prerequisites, tool updates, cleanup steps, and best practices for a smooth package upload workflow." />
    <option name="LAST_COMMIT_MESSAGE" value="Add detailed instructions for uploading packages to PyPI&#10;&#10;This documentation outlines the step-by-step process for building, testing, and publishing Python packages to PyPI. It includes prerequisites, tool updates, cleanup steps, and best practices for a smooth package upload workflow." />
  </component>
  <component name="com.intellij.coverage.CoverageDataManagerImpl">
    <SUITE FILE_PATH="coverage/CustomLogger$logger_setup.coverage" NAME="logger_setup Coverage Results" MODIFIED="1744507180438" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$/src/THCustomLogger" />
  </component>
</project>