"use strict";(self.webpackChunksage_agent=self.webpackChunksage_agent||[]).push([[509],{509:(e,t,s)=>{s.r(t),s.d(t,{default:()=>h});var a=s(507),i=s(569),n=s(256);class o extends n.Widget{constructor(){super(),this.apiKey="",this.inferenceUrl="https://api.alpinex.ai/v1/chat/completions",this.modelName="Meta-Llama-3.1-405B-Instruct-Turbo",this.messageHistory=[],this.id="sage-ai-chat",this.title.label="AI Chat",this.title.closable=!0,this.addClass("sage-ai-chatbox");const e=new n.PanelLayout;this.layout=e;const t=document.createElement("div");t.className="sage-ai-history-container",this.chatHistory=document.createElement("div"),this.chatHistory.className="sage-ai-chat-history",t.appendChild(this.chatHistory);const s=document.createElement("div");s.className="sage-ai-input-container",this.chatInput=document.createElement("input"),this.chatInput.className="sage-ai-chat-input",this.chatInput.placeholder="Ask your question...",this.chatInput.addEventListener("keydown",(e=>{"Enter"===e.key&&""!==this.chatInput.value.trim()&&this.sendMessage()})),this.sendButton=document.createElement("button"),this.sendButton.className="sage-ai-send-button",this.sendButton.textContent="Send",this.sendButton.addEventListener("click",(()=>{""!==this.chatInput.value.trim()&&this.sendMessage()})),s.appendChild(this.chatInput),s.appendChild(this.sendButton),e.addWidget(new n.Widget({node:t})),e.addWidget(new n.Widget({node:s})),this.addSystemMessage(`Welcome to AI Chat! Using model: ${this.modelName}`)}onAfterShow(e){this.chatInput.focus()}setApiKey(e){this.apiKey=e,e?this.addSystemMessage("API key configured successfully."):this.addSystemMessage("⚠️ No API key set. Please configure it in the settings.")}setInferenceUrl(e){this.inferenceUrl=e||"https://api.alpinex.ai/v1/chat/completions",this.addSystemMessage(`Inference URL set to: ${this.inferenceUrl}`)}setModelName(e){e&&e!==this.modelName&&(this.modelName=e,this.addSystemMessage(`Model changed to: ${this.modelName}`))}addUserMessage(e){const t=document.createElement("div");t.className="sage-ai-message sage-ai-user-message",t.innerHTML=`<strong>You:</strong> ${e}`,this.chatHistory.appendChild(t),this.chatHistory.scrollTop=this.chatHistory.scrollHeight,this.messageHistory.push({role:"user",content:e})}addAIResponse(e){const t=document.createElement("div");t.className="sage-ai-message sage-ai-ai-message",t.innerHTML=`<strong>AI:</strong> ${e}`,this.chatHistory.appendChild(t),this.chatHistory.scrollTop=this.chatHistory.scrollHeight,this.messageHistory.push({role:"assistant",content:e})}addSystemMessage(e){const t=document.createElement("div");t.className="sage-ai-message sage-ai-system-message",t.textContent=e,this.chatHistory.appendChild(t),this.chatHistory.scrollTop=this.chatHistory.scrollHeight}async sendMessage(){var e;const t=this.chatInput.value.trim();if(!t)return;if(this.addUserMessage(t),this.chatInput.value="",!this.apiKey)return void this.addSystemMessage("❌ API key is not set. Please configure it in the settings.");const s=document.createElement("div");s.className="sage-ai-message sage-ai-loading",s.textContent="AI is thinking...",this.chatHistory.appendChild(s),this.chatHistory.scrollTop=this.chatHistory.scrollHeight;try{const t=[...this.messageHistory],a=await fetch(this.inferenceUrl,{method:"POST",headers:{"Content-Type":"application/json",Authorization:`Bearer ${this.apiKey}`},body:JSON.stringify({model:this.modelName,messages:t.slice(-10)})});if(this.chatHistory.removeChild(s),!a.ok){const t=await a.json();throw new Error((null===(e=t.error)||void 0===e?void 0:e.message)||`Error: ${a.statusText}`)}const i=(await a.json()).choices[0].message.content;this.addAIResponse(i)}catch(e){s.parentNode===this.chatHistory&&this.chatHistory.removeChild(s),this.addSystemMessage(`❌ ${e instanceof Error?e.message:"An error occurred while communicating with the AI service."}`)}}}const c={id:"sage-ai:plugin",description:"Sage AI - Your AI Data Partner",autoStart:!0,requires:[i.ICommandPalette],optional:[a.ISettingRegistry],activate:(e,t,s)=>{console.log("JupyterLab extension sage-ai is activated!");const a=new i.WidgetTracker({namespace:"sage-ai-chat"}),n=()=>{const t=new o;return a.add(t),e.shell.add(t,"right",{rank:1e3}),t};let h=n();s&&Promise.all([s.load(c.id),e.restored]).then((([e])=>{(e=>{const t=e.get("apiKey").composite;h.setApiKey(t);const s=e.get("inferenceUrl").composite;h.setInferenceUrl(s);const a=e.get("modelName").composite;h.setModelName(a),e.changed.connect((()=>{const t=e.get("apiKey").composite,s=e.get("inferenceUrl").composite,a=e.get("modelName").composite;h.setApiKey(t),h.setInferenceUrl(s),h.setModelName(a)}))})(e)})).catch((e=>{console.error("Failed to load sage-ai settings",e)}));const r="sage-ai:open-chat";e.commands.addCommand(r,{label:"Open AI Chat",execute:()=>{h.isDisposed&&(h=n()),h.isAttached||e.shell.add(h,"right",{rank:1e3}),e.shell.activateById(h.id)}}),t.addItem({command:r,category:"AI Tools"})}},h=c}}]);