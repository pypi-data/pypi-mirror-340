name: Release

on:
  release:
    types: [published]

jobs:
  release:
    if: ${{ !startsWith(github.ref_name, 'ts-') }}
    runs-on: ubuntu-latest
    environment: release
    permissions:
      id-token: write
      contents: read

    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: "3.12"
        cache: 'pip'
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install build twine tomli

    - name: Verify version sync
      run: |
        echo "Checking Python version sync..."
        pkg_version=$(python -c "import tomli; print(tomli.load(open('pyproject.toml', 'rb'))['project']['version'])")
        code_version=$(python -c "from gh_store.core.version import __version__; print(__version__)")
        
        if [ "$pkg_version" != "$code_version" ]; then
          echo "Version mismatch: pyproject.toml ($pkg_version) != version.py ($code_version)"
          exit 1
        fi

    - name: Build package
      run: python -m build
        
    - name: Publish to PyPI
      uses: pypa/gh-action-pypi-publish@release/v1
