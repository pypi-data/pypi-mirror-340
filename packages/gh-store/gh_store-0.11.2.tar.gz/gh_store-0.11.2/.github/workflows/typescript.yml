# .github/workflows/typescript.yml
name: TypeScript Client

on:
  push:
    paths:
      - 'typescript/**'
      - '.github/workflows/typescript.yml'
    branches: [ main, ts ]
  pull_request:
    paths:
      - 'typescript/**'
      - '.github/workflows/typescript.yml'
    branches: [ main ]
  release:
    types: [published]
  workflow_dispatch:

jobs:
  build-and-test:
    # Skip this job for non-TypeScript releases
    if: ${{ !github.event.release || startsWith(github.ref_name, 'ts-') }}
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: typescript

    steps:
    - uses: actions/checkout@v4
    
    # Initial clean npm install to generate package-lock.json
    - name: Initialize npm
      run: |
        # Force rebuild of package-lock.json if it exists
        if [ -f "package-lock.json" ]; then
          rm -f package-lock.json
        fi
        npm install --package-lock-only --no-audit
        git status
    
    # Now setup Node with caching
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        registry-url: 'https://registry.npmjs.org'
        cache: 'npm'
        cache-dependency-path: './typescript/package-lock.json'
        
    - name: Install dependencies
      run: npm ci --prefer-offline

    - name: Sync version
      run: npm run prebuild
        
    - name: Type check
      run: npm run type-check
        
    - name: Lint
      run: npm run lint
        
    - name: Test
      run: npm run test
        
    - name: Build
      run: npm run build

    # Show build outputs for debugging
    - name: Show dist contents
      run: |
        echo "Dist directory contents:"
        ls -la dist/
        echo "Package exports:"
        cat package.json | jq '.exports'

    # Run packaging test after build
    - name: Test packaging
      run: |
        if [ ! -f "scripts/test-packaging.js" ]; then
          echo "Error: packaging test script not found"
          exit 1
        fi
        # Run packaging tests after build
        npm run test:packaging
    
    # Only run publish step on releases with a tag starting with 'ts-v'
    - name: Publish to npm
      if: ${{ github.event.release && startsWith(github.ref_name, 'ts-') }}
      run: npm publish
      env:
        NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
