[project]
    name = "ttrpg-dice"
    description = ""
    readme = "README.md"
    license = { text = "MIT" }
    authors = [{ name = "Mike Foster" }]
    dynamic = ["version"]
    requires-python = ">=3.10"
    classifiers = [
        "Programming Language :: Python :: 3",
        "Programming Language :: Rust",
        "License :: OSI Approved :: MIT License",
        "Operating System :: OS Independent",
        "Topic :: Software Development :: Libraries :: Python Modules",
        "Intended Audience :: Developers",
        "Natural Language :: English",
    ]
    dependencies = [
        "matplotlib",
        "tabulate2",
        
        "typing-extensions; python_version < '3.11'",
    ]

[project.urls]
    # Homepage = ""
    Documentation = "https://musicalninjadad.github.io/ttrpg-dice"
    Repository = "https://github.com/MusicalNinjaDad/ttrpg-dice"
    Issues = "https://github.com/MusicalNinjaDad/ttrpg-dice/issues"
    Changelog = "https://github.com/MusicalNinjaDad/ttrpg-dice/blob/main/CHANGELOG.md"

[tool.setuptools.dynamic]
    version = { file = "__pyversion__" }

# ===========================
#       Build, package
# ===========================

[build-system]
    requires = ["setuptools"]

[tool.setuptools.packages.find]
    where = ["."]

# ===========================
#  Test, lint, documentation
# ===========================

[dependency-groups]
    lint = ["ruff"]
    typing = [
        {include-group = "test"},
        "pytype; python_version <= '3.12'",
        "typing_extensions", # required for Python3.10 and below
    ]
    test = [
        "pytest",
        "pytest-doctest-mkdocstrings",
        ]
    cov = [
        {include-group = "test"},
        "pytest-cov",
    ]
    doc = [
        "black",
        "mkdocs",
        "mkdocstrings[python]",
        "mkdocs-material",
    ]
    dev = [
        {include-group = "lint"},
        {include-group = "typing"},
        {include-group = "test"},
        {include-group = "cov"},
        {include-group = "doc"},
        "jupyter",
    ]

[tool.pytest.ini_options]
    xfail_strict = true
    addopts = [
        "--doctest-modules",
        "--doctest-mdcodeblocks",
        "--doctest-glob=*.pyi",
        "--doctest-glob=*.md",
    ]
    testpaths = ["tests", "ttrpg_dice"]

[tool.coverage.run]
    branch = true
    omit = ["tests/*"]

[tool.coverage.report]
exclude_also = [
    "def __repr__",
    "if TYPE_CHECKING:",
    "except ImportError:",
    ]

[tool.coverage.html]
    show_contexts = true

[tool.pytype]
inputs = ["ttrpg_dice"]

[tool.ruff]
    line-length = 120
    format.skip-magic-trailing-comma = false
    format.quote-style = "double"

[tool.ruff.lint]
    select = ["ALL"]
    flake8-pytest-style.fixture-parentheses = false
    flake8-pytest-style.parametrize-names-type = "list"
    flake8-annotations.mypy-init-return = true
    extend-ignore = [
        "E701",   # One-line ifs are not great, one-liners with suppression are worse
        "ERA001", # pytype suppression blocks are identified as commented-out code
        "ANN202", # Return type annotation for private functions
        "ANN401", # Using Any often enough that supressing individually is pointless
        "W291",   # Double space at EOL is linebreak in md-docstring
        "W292",   # Too much typing to add newline at end of each file
        "W293",   # Whitespace only lines are OK for us
        "D401",   # First line of docstring should be in imperative mood ("Returns ..." is OK, for example)
        "D203",   # 1 blank line required before class docstring (No thank you, only after the class docstring)
        "D212",   # Multi-line docstring summary should start at the first line (We start on new line, D209)
        "D215",   # Section underline is over-indented (No underlines)
        "D400",   # First line should end with a period (We allow any punctuation, D415)
        "D406",   # Section name should end with a newline (We use a colon, D416)
        "D407",   # Missing dashed underline after section (No underlines)
        "D408",   # Section underline should be in the line following the section's name (No underlines)
        "D409",   # Section underline should match the length of its name (No underlines)
        "D413",   # Missing blank line after last section (Not required)
        "TD",     # TODOs don't need to include github issue etc. until merging to `main`
        "FIX002", # TODOs are fine in general
    ]
    extend-select = [
        "TD005",  # TODOs need a description, even outside of `main`
    ]

[tool.ruff.lint.per-file-ignores]
    # Additional ignores for tests 
    "**/test_*.py" = [
        "INP001",  # Missing __init__.py
        "ANN",     # Missing type annotations
        "S101",    # Use of `assert`
        "SIM300",  # In tests Yoda OK is ... hmmm! (`assert thing == expected`)
        "PLR2004", # Magic number comparisons are OK in tests
        "D1",      # Don't REQUIRE docstrings for tests - but they are nice
        "N802",    # Test case names may include caps (e.g. when referring to a class under test)
    ]

    "**/conftest.py" = [
        "D100",    # conftest.py doesn't need a top-level docstring
        "INP001",  # Missing __init__.py
        "S101",    # Use of `assert`
        "PLR2004", # Magic number comparisons are OK in tests
    ]

    "**/__init__.py" = [
        "F401", # Unused imports are fine: using __init__.py to expose them with implicit __ALL__
    ]

    "tests/assets/expected.pyi" = [
        "ANN001", "ANN201", # Cannot automatically generate type annotations
    ]

    "**/*.ipynb" = [
        "T201", # Allow `print` in Jupyter notebooks
    ]
