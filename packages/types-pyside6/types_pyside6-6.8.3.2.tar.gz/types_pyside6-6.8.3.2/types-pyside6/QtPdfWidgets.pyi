# Copyright (C) 2022 The Qt Company Ltd.
# SPDX-License-Identifier: LicenseRef-Qt-Commercial OR LGPL-3.0-only OR GPL-2.0-only OR GPL-3.0-only
from __future__ import annotations
"""
This file contains the exact signatures for all functions in module
PySide6.QtPdfWidgets, except for defaults which are replaced by "...".

# mypy: disable-error-code="override, overload-overlap"
"""

# Module `PySide6.QtPdfWidgets`

import PySide6.QtPdfWidgets
import PySide6.QtCore
import PySide6.QtGui
import PySide6.QtWidgets
import PySide6.QtPdf

import enum
import typing
from PySide6.QtCore import Signal


class QIntList: ...


class QPdfPageSelector(PySide6.QtWidgets.QWidget):

    currentPageChanged       : typing.ClassVar[Signal] = ... # currentPageChanged(int)
    currentPageLabelChanged  : typing.ClassVar[Signal] = ... # currentPageLabelChanged(QString)
    documentChanged          : typing.ClassVar[Signal] = ... # documentChanged(QPdfDocument*)

    @typing.overload
    def __init__(self, parent: PySide6.QtWidgets.QWidget, /, *, document: PySide6.QtPdf.QPdfDocument | None = ..., current_page: int | None = ..., current_page_label: str | None = ...) -> None: ...
    @typing.overload
    def __init__(self, /, *, document: PySide6.QtPdf.QPdfDocument | None = ..., current_page: int | None = ..., current_page_label: str | None = ...) -> None: ...

    def current_page(self, /) -> int: ...
    def current_page_label(self, /) -> str: ...
    def document(self, /) -> PySide6.QtPdf.QPdfDocument: ...
    def set_current_page(self, index: int, /) -> None: ...
    def set_document(self, document: PySide6.QtPdf.QPdfDocument, /) -> None: ...


class QPdfView(PySide6.QtWidgets.QAbstractScrollArea):

    currentSearchResultIndexChanged: typing.ClassVar[Signal] = ... # currentSearchResultIndexChanged(int)
    documentChanged          : typing.ClassVar[Signal] = ... # documentChanged(QPdfDocument*)
    documentMarginsChanged   : typing.ClassVar[Signal] = ... # documentMarginsChanged(QMargins)
    pageModeChanged          : typing.ClassVar[Signal] = ... # pageModeChanged(QPdfView::PageMode)
    pageSpacingChanged       : typing.ClassVar[Signal] = ... # pageSpacingChanged(int)
    searchModelChanged       : typing.ClassVar[Signal] = ... # searchModelChanged(QPdfSearchModel*)
    zoomFactorChanged        : typing.ClassVar[Signal] = ... # zoomFactorChanged(double)
    zoomModeChanged          : typing.ClassVar[Signal] = ... # zoomModeChanged(QPdfView::ZoomMode)

    class PageMode(enum.Enum):

        SinglePage                = ...  # 0x0
        MultiPage                 = ...  # 0x1

    class ZoomMode(enum.Enum):

        Custom                    = ...  # 0x0
        FitToWidth                = ...  # 0x1
        FitInView                 = ...  # 0x2


    @typing.overload
    def __init__(self, parent: PySide6.QtWidgets.QWidget, /, *, document: PySide6.QtPdf.QPdfDocument | None = ..., page_mode: PySide6.QtPdfWidgets.QPdfView.PageMode | None = ..., zoom_mode: PySide6.QtPdfWidgets.QPdfView.ZoomMode | None = ..., zoom_factor: float | None = ..., page_spacing: int | None = ..., document_margins: PySide6.QtCore.QMargins | None = ..., search_model: PySide6.QtPdf.QPdfSearchModel | None = ..., current_search_result_index: int | None = ...) -> None: ...
    @typing.overload
    def __init__(self, /, *, document: PySide6.QtPdf.QPdfDocument | None = ..., page_mode: PySide6.QtPdfWidgets.QPdfView.PageMode | None = ..., zoom_mode: PySide6.QtPdfWidgets.QPdfView.ZoomMode | None = ..., zoom_factor: float | None = ..., page_spacing: int | None = ..., document_margins: PySide6.QtCore.QMargins | None = ..., search_model: PySide6.QtPdf.QPdfSearchModel | None = ..., current_search_result_index: int | None = ...) -> None: ...

    def current_search_result_index(self, /) -> int: ...
    def document(self, /) -> PySide6.QtPdf.QPdfDocument: ...
    def document_margins(self, /) -> PySide6.QtCore.QMargins: ...
    def mouse_move_event(self, event: PySide6.QtGui.QMouseEvent, /) -> None: ...
    def mouse_press_event(self, event: PySide6.QtGui.QMouseEvent, /) -> None: ...
    def mouse_release_event(self, event: PySide6.QtGui.QMouseEvent, /) -> None: ...
    def page_mode(self, /) -> PySide6.QtPdfWidgets.QPdfView.PageMode: ...
    def page_navigator(self, /) -> PySide6.QtPdf.QPdfPageNavigator: ...
    def page_spacing(self, /) -> int: ...
    def paint_event(self, event: PySide6.QtGui.QPaintEvent, /) -> None: ...
    def resize_event(self, event: PySide6.QtGui.QResizeEvent, /) -> None: ...
    def scroll_contents_by(self, dx: int, dy: int, /) -> None: ...
    def search_model(self, /) -> PySide6.QtPdf.QPdfSearchModel: ...
    def set_current_search_result_index(self, currentResult: int, /) -> None: ...
    def set_document(self, document: PySide6.QtPdf.QPdfDocument, /) -> None: ...
    def set_document_margins(self, margins: PySide6.QtCore.QMargins, /) -> None: ...
    def set_page_mode(self, mode: PySide6.QtPdfWidgets.QPdfView.PageMode, /) -> None: ...
    def set_page_spacing(self, spacing: int, /) -> None: ...
    def set_search_model(self, searchModel: PySide6.QtPdf.QPdfSearchModel, /) -> None: ...
    def set_zoom_factor(self, factor: float, /) -> None: ...
    def set_zoom_mode(self, mode: PySide6.QtPdfWidgets.QPdfView.ZoomMode, /) -> None: ...
    def zoom_factor(self, /) -> float: ...
    def zoom_mode(self, /) -> PySide6.QtPdfWidgets.QPdfView.ZoomMode: ...


# eof
