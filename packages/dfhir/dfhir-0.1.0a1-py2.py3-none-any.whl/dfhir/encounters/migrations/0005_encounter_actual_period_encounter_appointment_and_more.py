# Generated by Django 4.2.14 on 2025-01-10 10:46

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('healthcareservices', '0005_remove_healthcareservicecodeablereference_healthcare_service'),
        ('base', '0003_communication'),
        ('appointments', '0008_appointment_based_on_appointment_reason_and_more'),
        ('encounters', '0004_encounteradmission_destination_and_more'),
    ]

    operations = [
        migrations.AddField(
            model_name='encounter',
            name='actual_period',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='encounter_actual_period', to='base.period'),
        ),
        migrations.AddField(
            model_name='encounter',
            name='appointment',
            field=models.ManyToManyField(blank=True, related_name='encounter_appointment', to='appointments.appointmentreference'),
        ),
        migrations.AddField(
            model_name='encounter',
            name='based_on',
            field=models.ManyToManyField(blank=True, related_name='encounter_based_on', to='encounters.encounterbasedonreference'),
        ),
        migrations.AddField(
            model_name='encounter',
            name='diagnosis',
            field=models.ManyToManyField(blank=True, related_name='encounter_diagnosis', to='encounters.encounterdiagnosis'),
        ),
        migrations.AddField(
            model_name='encounter',
            name='diet_preference',
            field=models.ManyToManyField(blank=True, related_name='encounter_diet_preference', to='base.codeableconcept'),
        ),
        migrations.AddField(
            model_name='encounter',
            name='length',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='encounter_length', to='base.quantity'),
        ),
        migrations.AddField(
            model_name='encounter',
            name='part_of',
            field=models.ManyToManyField(blank=True, related_name='encounter_part_of', to='encounters.encounterreference'),
        ),
        migrations.AddField(
            model_name='encounter',
            name='participant',
            field=models.ManyToManyField(blank=True, related_name='encounter_participant', to='encounters.encounterparticipant'),
        ),
        migrations.AddField(
            model_name='encounter',
            name='reason',
            field=models.ManyToManyField(blank=True, related_name='encounter_reason', to='encounters.encounterreason'),
        ),
        migrations.AddField(
            model_name='encounter',
            name='service_type',
            field=models.ManyToManyField(related_name='encounter_service_type', to='healthcareservices.healthcareservicecodeablereference'),
        ),
        migrations.AddField(
            model_name='encounter',
            name='special_arrangement',
            field=models.ManyToManyField(blank=True, related_name='encounter_special_arrangement', to='base.codeableconcept'),
        ),
        migrations.AddField(
            model_name='encounter',
            name='special_courtesy',
            field=models.ManyToManyField(blank=True, related_name='encounter_special_courtesy', to='base.codeableconcept'),
        ),
        migrations.AddField(
            model_name='encounter',
            name='type',
            field=models.ManyToManyField(blank=True, related_name='encounter_type', to='base.codeableconcept'),
        ),
        migrations.AddField(
            model_name='encounter',
            name='virtual_service',
            field=models.ManyToManyField(blank=True, related_name='encounter_virtual_service', to='base.virtualservicedetails'),
        ),
    ]
