# Generated by Django 4.2.14 on 2025-01-06 22:48

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('base', '0001_initial'),
        ('organizations', '0001_initial'),
    ]

    operations = [
        migrations.AddField(
            model_name='organizationreference',
            name='organization',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='organization_reference', to='organizations.organization'),
        ),
        migrations.AddField(
            model_name='notavailabletime',
            name='during',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='not_available_time_during', to='base.period'),
        ),
        migrations.AddField(
            model_name='identifier',
            name='assigner',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='identifier_for_organization', to='base.organizationreference'),
        ),
        migrations.AddField(
            model_name='identifier',
            name='period',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='identifier', to='base.period'),
        ),
        migrations.AddField(
            model_name='identifier',
            name='type',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='base.codeableconcept'),
        ),
        migrations.AddField(
            model_name='humanname',
            name='period',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='human_name_period', to='base.period'),
        ),
        migrations.AddField(
            model_name='extendedcontactdetail',
            name='address',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='contact_detail_address', to='base.address'),
        ),
        migrations.AddField(
            model_name='extendedcontactdetail',
            name='name',
            field=models.ManyToManyField(blank=True, related_name='contact_detail_name', to='base.humanname'),
        ),
        migrations.AddField(
            model_name='extendedcontactdetail',
            name='organization',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='contact_detail_organization', to='organizations.organization'),
        ),
        migrations.AddField(
            model_name='extendedcontactdetail',
            name='period',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='contact_detail_period', to='base.period'),
        ),
        migrations.AddField(
            model_name='extendedcontactdetail',
            name='purpose',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='contact_detail_purpose', to='base.codeableconcept'),
        ),
        migrations.AddField(
            model_name='extendedcontactdetail',
            name='telecom',
            field=models.ManyToManyField(blank=True, related_name='contact_detail_telecom', to='base.contactpoint'),
        ),
        migrations.AddField(
            model_name='endpointreference',
            name='endpoint',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='endpoint_reference', to='base.endpoint'),
        ),
        migrations.AddField(
            model_name='endpointreference',
            name='identifier',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='base.identifier'),
        ),
        migrations.AddField(
            model_name='endpoint',
            name='availability',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='endpoint_availability', to='base.availability'),
        ),
        migrations.AddField(
            model_name='endpoint',
            name='connection_type',
            field=models.ManyToManyField(blank=True, related_name='endpoint_connection_type', to='base.connectiontype'),
        ),
        migrations.AddField(
            model_name='endpoint',
            name='contact',
            field=models.ManyToManyField(blank=True, related_name='endpoint_contact', to='base.contactpoint'),
        ),
        migrations.AddField(
            model_name='endpoint',
            name='identifier',
            field=models.ManyToManyField(blank=True, related_name='endpoint_identifier', to='base.identifier'),
        ),
        migrations.AddField(
            model_name='endpoint',
            name='managing_organization',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='endpoint_managing_organization', to='organizations.organization'),
        ),
        migrations.AddField(
            model_name='endpoint',
            name='payload',
            field=models.ManyToManyField(blank=True, related_name='endpoint_payload', to='base.payload'),
        ),
        migrations.AddField(
            model_name='endpoint',
            name='period',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='endpoint_period', to='base.period'),
        ),
        migrations.AddField(
            model_name='contactpoint',
            name='period',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='contact_point_period', to='base.period'),
        ),
        migrations.AddField(
            model_name='codeableconcept',
            name='coding',
            field=models.ManyToManyField(related_name='codeable_concept', to='base.coding'),
        ),
        migrations.AddField(
            model_name='availability',
            name='available_time',
            field=models.ManyToManyField(blank=True, related_name='availability_available_time', to='base.availabletime'),
        ),
        migrations.AddField(
            model_name='availability',
            name='not_available_time',
            field=models.ManyToManyField(blank=True, related_name='availability_not_available_time', to='base.notavailabletime'),
        ),
        migrations.AddField(
            model_name='availability',
            name='period',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='availability_period', to='base.period'),
        ),
        migrations.AddField(
            model_name='annotation',
            name='author_reference',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='annotation_author_reference', to='base.reference'),
        ),
        migrations.AddField(
            model_name='address',
            name='period',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='address_period', to='base.period'),
        ),
    ]
