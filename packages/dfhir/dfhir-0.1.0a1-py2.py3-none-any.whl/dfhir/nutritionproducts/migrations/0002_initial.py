# Generated by Django 4.2.14 on 2025-02-03 11:12

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('substances', '0002_substancecodeablereference'),
        ('nutritionproducts', '0001_initial'),
        ('base', '0010_expression_relativetime'),
    ]

    operations = [
        migrations.AddField(
            model_name='nutritionproductnutrients',
            name='item',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='nutrition_product_nutrients_item', to='substances.substancecodeablereference'),
        ),
        migrations.AddField(
            model_name='nutritionproductinstance',
            name='biological_source_event',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='nutrition_product_instance_biological_source_event', to='base.identifier'),
        ),
        migrations.AddField(
            model_name='nutritionproductinstance',
            name='identifier',
            field=models.ManyToManyField(blank=True, related_name='nutrition_product_instance_identifier', to='base.identifier'),
        ),
        migrations.AddField(
            model_name='nutritionproductinstance',
            name='quantity',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='nutrition_product_instance_quantity', to='base.quantity'),
        ),
        migrations.AddField(
            model_name='nutritionproductingredient',
            name='amount_quantity',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='nutrition_product_ingredient_amount_quantity', to='base.quantity'),
        ),
        migrations.AddField(
            model_name='nutritionproductingredient',
            name='amount_ratio',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='nutrition_product_ingredient_amount_ratio', to='base.ratio'),
        ),
        migrations.AddField(
            model_name='nutritionproductingredient',
            name='item',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='nutrition_product_ingredient_item', to='nutritionproducts.nutritionproductcodeablereference'),
        ),
        migrations.AddField(
            model_name='nutritionproductcodeablereference',
            name='concept',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='nutrition_product_codeable_reference_concept', to='base.codeableconcept'),
        ),
        migrations.AddField(
            model_name='nutritionproductcodeablereference',
            name='reference',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='nutrition_product_codeable_reference_reference', to='nutritionproducts.nutritionproductreference'),
        ),
        migrations.AddField(
            model_name='nutritionproductcharacteristic',
            name='type',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='nutrition_product_characteristic_type', to='base.codeableconcept'),
        ),
        migrations.AddField(
            model_name='nutritionproductcharacteristic',
            name='value_attachment',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='nutrition_product_characteristic_value_attachment', to='base.attachment'),
        ),
        migrations.AddField(
            model_name='nutritionproductcharacteristic',
            name='value_codeable_concept',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='nutrition_product_characteristic_value_codeable_concept', to='base.codeableconcept'),
        ),
        migrations.AddField(
            model_name='nutritionproductcharacteristic',
            name='value_quantity',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='nutrition_product_characteristic_value_quantity', to='base.quantity'),
        ),
        migrations.AddField(
            model_name='nutritionproduct',
            name='category',
            field=models.ManyToManyField(blank=True, related_name='nutrition_product_category', to='base.codeableconcept'),
        ),
        migrations.AddField(
            model_name='nutritionproduct',
            name='characteristic',
            field=models.ManyToManyField(blank=True, related_name='nutrition_product_characteristic', to='nutritionproducts.nutritionproductcharacteristic'),
        ),
        migrations.AddField(
            model_name='nutritionproduct',
            name='code',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='nutrition_product_code', to='base.codeableconcept'),
        ),
        migrations.AddField(
            model_name='nutritionproduct',
            name='energy',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='nutrition_product_energy', to='base.quantity'),
        ),
        migrations.AddField(
            model_name='nutritionproduct',
            name='ingredient',
            field=models.ManyToManyField(blank=True, related_name='nutrition_product_ingredient', to='nutritionproducts.nutritionproductingredient'),
        ),
        migrations.AddField(
            model_name='nutritionproduct',
            name='instance',
            field=models.ManyToManyField(blank=True, related_name='nutrition_product_instance', to='nutritionproducts.nutritionproductinstance'),
        ),
        migrations.AddField(
            model_name='nutritionproduct',
            name='manufacturer',
            field=models.ManyToManyField(blank=True, related_name='nutrition_product_manufacturer', to='base.organizationreference'),
        ),
        migrations.AddField(
            model_name='nutritionproduct',
            name='note',
            field=models.ManyToManyField(blank=True, related_name='nutrition_product_note', to='base.annotation'),
        ),
        migrations.AddField(
            model_name='nutritionproduct',
            name='nutrient',
            field=models.ManyToManyField(blank=True, related_name='nutrition_product_nutrient', to='nutritionproducts.nutritionproductnutrients'),
        ),
    ]
