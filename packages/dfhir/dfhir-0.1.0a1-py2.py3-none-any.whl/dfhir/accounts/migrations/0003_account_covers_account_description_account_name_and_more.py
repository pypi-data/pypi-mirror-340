# Generated by Django 4.2.14 on 2025-02-13 12:27

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('devices', '0007_alter_device_status_and_more'),
        ('patients', '0007_patientorganizationreference'),
        ('conditions', '0004_remove_condition_recorded_date_time_and_more'),
        ('base', '0013_money'),
        ('practitioners', '0010_practitionerrole_endpoint'),
        ('relatedpersons', '0002_relatedperson_communication_relatedperson_gender'),
        ('accounts', '0002_accountbalance_accountcoverage_accountdiagnosis_and_more'),
        ('healthcareservices', '0006_remove_healthcareservice_endpoint'),
        ('locations', '0006_merge_20250129_1542'),
        ('encounters', '0009_encounterepisodeofcarereference'),
        ('organizations', '0003_organization_endpoint'),
        ('procedures', '0002_procedurecodeablereference'),
    ]

    operations = [
        migrations.AddField(
            model_name='account',
            name='covers',
            field=models.ManyToManyField(blank=True, related_name='accounts_covers', to='encounters.encounterepisodeofcarereference'),
        ),
        migrations.AddField(
            model_name='account',
            name='description',
            field=models.TextField(null=True),
        ),
        migrations.AddField(
            model_name='account',
            name='name',
            field=models.CharField(max_length=255, null=True),
        ),
        migrations.AddField(
            model_name='account',
            name='owner',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='accounts_owner', to='base.organizationreference'),
        ),
        migrations.AddField(
            model_name='account',
            name='service_period',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='accounts_service_period', to='base.period'),
        ),
        migrations.AddField(
            model_name='accountsubjectreference',
            name='device',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='account_subject_reference_device', to='devices.device'),
        ),
        migrations.AddField(
            model_name='accountsubjectreference',
            name='healthcare_service',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='account_subject_reference_healthcare_service', to='healthcareservices.healthcareservice'),
        ),
        migrations.AddField(
            model_name='accountsubjectreference',
            name='identifier',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='account_subject_reference_identifier', to='base.identifier'),
        ),
        migrations.AddField(
            model_name='accountsubjectreference',
            name='location',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='account_subject_reference_location', to='locations.location'),
        ),
        migrations.AddField(
            model_name='accountsubjectreference',
            name='organization',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='account_subject_reference_organization', to='organizations.organization'),
        ),
        migrations.AddField(
            model_name='accountsubjectreference',
            name='patient',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='account_subject_reference_patient', to='patients.patient'),
        ),
        migrations.AddField(
            model_name='accountsubjectreference',
            name='practitioner',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='account_subject_reference_practitioner', to='practitioners.practitioner'),
        ),
        migrations.AddField(
            model_name='accountsubjectreference',
            name='practitioner_role',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='account_subject_reference_practitioner_role', to='practitioners.practitionerrole'),
        ),
        migrations.AddField(
            model_name='accountsguarantorpartyreference',
            name='identifier',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='accounts_guarantor_party_reference_identifier', to='base.identifier'),
        ),
        migrations.AddField(
            model_name='accountsguarantorpartyreference',
            name='organization',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='accounts_guarantor_party_reference_organization', to='organizations.organization'),
        ),
        migrations.AddField(
            model_name='accountsguarantorpartyreference',
            name='patient',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='accounts_guarantor_party_reference_patient', to='patients.patient'),
        ),
        migrations.AddField(
            model_name='accountsguarantorpartyreference',
            name='related_person',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='accounts_guarantor_party_reference_related_person', to='relatedpersons.relatedperson'),
        ),
        migrations.AddField(
            model_name='accountrelatedaccount',
            name='reference',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='account_related_account_reference', to='accounts.accountreference'),
        ),
        migrations.AddField(
            model_name='accountrelatedaccount',
            name='relationship',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='account_related_account_relationship', to='base.codeableconcept'),
        ),
        migrations.AddField(
            model_name='accountprocedure',
            name='code',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='account_procedure_code', to='procedures.procedurecodeablereference'),
        ),
        migrations.AddField(
            model_name='accountprocedure',
            name='device',
            field=models.ManyToManyField(blank=True, related_name='account_procedure_device', to='devices.devicereference'),
        ),
        migrations.AddField(
            model_name='accountprocedure',
            name='package_code',
            field=models.ManyToManyField(blank=True, related_name='account_procedure_package_code', to='base.codeableconcept'),
        ),
        migrations.AddField(
            model_name='accountprocedure',
            name='type',
            field=models.ManyToManyField(blank=True, related_name='account_procedure_type', to='base.codeableconcept'),
        ),
        migrations.AddField(
            model_name='accountguarantor',
            name='party',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='account_guarantor_party', to='accounts.accountsguarantorpartyreference'),
        ),
        migrations.AddField(
            model_name='accountguarantor',
            name='period',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='account_guarantor_period', to='base.period'),
        ),
        migrations.AddField(
            model_name='accountdiagnosis',
            name='condition',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='account_diagnosis_condition', to='conditions.conditioncodeablereference'),
        ),
        migrations.AddField(
            model_name='accountdiagnosis',
            name='package_code',
            field=models.ManyToManyField(blank=True, related_name='account_diagnosis_package_code', to='base.codeableconcept'),
        ),
        migrations.AddField(
            model_name='accountdiagnosis',
            name='type',
            field=models.ManyToManyField(blank=True, related_name='account_diagnosis_type', to='base.codeableconcept'),
        ),
        migrations.AddField(
            model_name='accountbalance',
            name='aggregate',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='account_balance_aggregate', to='base.codeableconcept'),
        ),
        migrations.AddField(
            model_name='accountbalance',
            name='amount',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='account_balance_amount', to='base.money'),
        ),
        migrations.AddField(
            model_name='accountbalance',
            name='term',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='account_balance_term', to='base.codeableconcept'),
        ),
        migrations.AddField(
            model_name='account',
            name='balance',
            field=models.ManyToManyField(blank=True, related_name='accounts_balance', to='accounts.accountbalance'),
        ),
        migrations.AddField(
            model_name='account',
            name='coverage',
            field=models.ManyToManyField(blank=True, related_name='accounts_coverage', to='accounts.accountcoverage'),
        ),
        migrations.AddField(
            model_name='account',
            name='diagnosis',
            field=models.ManyToManyField(blank=True, related_name='accounts_diagnosis', to='accounts.accountdiagnosis'),
        ),
        migrations.AddField(
            model_name='account',
            name='guarantor',
            field=models.ManyToManyField(blank=True, related_name='accounts_guarantor', to='accounts.accountguarantor'),
        ),
        migrations.AddField(
            model_name='account',
            name='procedure',
            field=models.ManyToManyField(blank=True, related_name='accounts_procedure', to='accounts.accountprocedure'),
        ),
        migrations.AddField(
            model_name='account',
            name='related_account',
            field=models.ManyToManyField(blank=True, related_name='accounts_related_account', to='accounts.accountrelatedaccount'),
        ),
        migrations.AddField(
            model_name='account',
            name='subject',
            field=models.ManyToManyField(blank=True, related_name='accounts_subject', to='accounts.accountsubjectreference'),
        ),
    ]
