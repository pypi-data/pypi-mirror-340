# Generated by Django 4.2.14 on 2025-02-19 11:01

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("base", "0013_money"),
        ("patients", "0007_patientorganizationreference"),
    ]

    operations = [
        migrations.CreateModel(
            name="ImmunizationImmunizationEvolutionReference",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("reference", models.CharField(max_length=255, null=True)),
                ("type", models.CharField(max_length=255, null=True)),
                ("display", models.CharField(max_length=255, null=True)),
                (
                    "identifier",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="immunization_immunization_evolution_reference_identifier",
                        to="base.identifier",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="ImmunizationRecommendationRecommendationDateCriterion",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("value", models.DateTimeField(null=True)),
                (
                    "code",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="immunization_recommendation_recommendation_date_criterion_code",
                        to="base.codeableconcept",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="ImmunizationRecommendationRecommendation",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("description", models.TextField(null=True)),
                ("series", models.CharField(max_length=255, null=True)),
                ("dose_number", models.CharField(max_length=255, null=True)),
                ("series_doses", models.CharField(max_length=255, null=True)),
                (
                    "contraindicated_vaccine_code",
                    models.ManyToManyField(
                        blank=True,
                        related_name="immunization_recommendation_recommendation_contraindicated_vaccine_code",
                        to="base.codeableconcept",
                    ),
                ),
                (
                    "date_criterion",
                    models.ManyToManyField(
                        blank=True,
                        related_name="immunization_recommendation_recommendation_date_criterion",
                        to="immunizationrecommendations.immunizationrecommendationrecommendationdatecriterion",
                    ),
                ),
                (
                    "forecast_reason",
                    models.ManyToManyField(
                        blank=True,
                        related_name="immunization_recommendation_recommendation_forecast_reason",
                        to="base.codeableconcept",
                    ),
                ),
                (
                    "forecast_status",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="immunization_recommendation_recommendation_forecast_status",
                        to="base.codeableconcept",
                    ),
                ),
                (
                    "supporting_information",
                    models.ManyToManyField(
                        blank=True,
                        related_name="immunization_recommendation_recommendation_supporting_information",
                        to="immunizationrecommendations.immunizationimmunizationevolutionreference",
                    ),
                ),
                (
                    "supporting_patient_information",
                    models.ManyToManyField(
                        blank=True,
                        related_name="immunization_recommendation_recommendation_supporting_patient_information",
                        to="base.reference",
                    ),
                ),
                (
                    "target_disease",
                    models.ManyToManyField(
                        blank=True,
                        related_name="immunization_recommendation_recommendation_target_disease",
                        to="base.codeableconcept",
                    ),
                ),
                (
                    "vaccine_code",
                    models.ManyToManyField(
                        blank=True,
                        related_name="immunization_recommendation_recommendation_vaccine_code",
                        to="base.codeableconcept",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="ImmunizationRecommendation",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("date", models.DateTimeField(null=True)),
                (
                    "authority",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="immunization_recommendation_authority",
                        to="base.organizationreference",
                    ),
                ),
                (
                    "identifier",
                    models.ManyToManyField(
                        blank=True,
                        related_name="immunization_recommendation_identifier",
                        to="base.identifier",
                    ),
                ),
                (
                    "patient",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="immunization_recommendation_patient",
                        to="patients.patientreference",
                    ),
                ),
                (
                    "recommendation",
                    models.ManyToManyField(
                        blank=True,
                        related_name="immunization_recommendation_recommendation",
                        to="immunizationrecommendations.immunizationrecommendationrecommendation",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
    ]
