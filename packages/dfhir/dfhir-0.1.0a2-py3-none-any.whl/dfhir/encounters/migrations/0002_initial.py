# Generated by Django 4.2.14 on 2025-01-06 22:48

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('practitioners', '0001_initial'),
        ('encounters', '0001_initial'),
        ('patients', '0001_initial'),
        ('appointments', '0004_initial'),
        ('organizations', '0001_initial'),
        ('healthcareservices', '0001_initial'),
        ('locations', '0001_initial'),
        ('base', '0002_initial'),
    ]

    operations = [
        migrations.AddField(
            model_name='encounterparticipant',
            name='practitioner',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='encounter_participant_practitioner', to='practitioners.practitioner'),
        ),
        migrations.AddField(
            model_name='encounter',
            name='appointment',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='encounter_appointment', to='appointments.appointment'),
        ),
        migrations.AddField(
            model_name='encounter',
            name='destination',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='admission_destination', to='locations.location'),
        ),
        migrations.AddField(
            model_name='encounter',
            name='diagnosis',
            field=models.ManyToManyField(blank=True, related_name='appointment_diagnosis', to='encounters.encountercondition'),
        ),
        migrations.AddField(
            model_name='encounter',
            name='diet_preference',
            field=models.ManyToManyField(blank=True, related_name='encounter_diet_preference', to='encounters.dietpreference'),
        ),
        migrations.AddField(
            model_name='encounter',
            name='location',
            field=models.ManyToManyField(blank=True, related_name='encounter_location', to='locations.location'),
        ),
        migrations.AddField(
            model_name='encounter',
            name='origin',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='admission_origin', to='locations.location'),
        ),
        migrations.AddField(
            model_name='encounter',
            name='part_of',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='encounters.encounter'),
        ),
        migrations.AddField(
            model_name='encounter',
            name='patient',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='encounter_patient', to='patients.patient'),
        ),
        migrations.AddField(
            model_name='encounter',
            name='reason',
            field=models.ManyToManyField(blank=True, related_name='encounter_reason', to='appointments.encounterreason'),
        ),
        migrations.AddField(
            model_name='encounter',
            name='service_provider',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='encounter_service_provider', to='organizations.organization'),
        ),
        migrations.AddField(
            model_name='encounter',
            name='service_type',
            field=models.ManyToManyField(related_name='encounter_service_type', to='healthcareservices.healthcareservice'),
        ),
        migrations.AddField(
            model_name='encounter',
            name='special_arrangement',
            field=models.ManyToManyField(blank=True, related_name='encounter_special_arrangement', to='encounters.specialarrangement'),
        ),
        migrations.AddField(
            model_name='encounter',
            name='special_courtesy',
            field=models.ManyToManyField(blank=True, related_name='encounter_special_courtesy', to='encounters.specialcourtesy'),
        ),
        migrations.AddField(
            model_name='encounter',
            name='virtual_service',
            field=models.ManyToManyField(blank=True, related_name='encounter_virtual_service', to='base.virtualservicedetails'),
        ),
    ]
