[build-system]
requires = ["hatchling>=1.26.0"]
build-backend = "hatchling.build"

[project]
name = "fastapi-mcp-client"
version = "0.1.0"
description = "A specialized client library for FastAPI services using Model Context Protocol (MCP) over Server-Sent Events (SSE)"
readme = "README.md"
requires-python = ">=3.10"
license = {file = "LICENSE"}
authors = [
    {name = "The FastAPI MCP Team"}
]
keywords = ["fastapi", "mcp", "client", "sse", "stream", "server-sent-events", "model-context-protocol"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Software Development :: Libraries :: Python Modules",
]
dependencies = [
    "httpx>=0.24.0",
]

[project.urls]
Homepage = "https://github.com/your-username/fastapi-mcp-client"
Documentation = "https://github.com/your-username/fastapi-mcp-client#readme"
Issues = "https://github.com/your-username/fastapi-mcp-client/issues"
Changelog = "https://github.com/your-username/fastapi-mcp-client/blob/main/CHANGELOG.md"

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-asyncio>=0.20.0",
    "pytest-cov>=4.0.0",
    "respx>=0.20.0",
    "mypy>=1.0.0",
    "ruff>=0.0.260",
    "black>=23.0.0",
    "fastapi>=0.115.12",
    "fastapi-mcp>=0.2.0",
]
docs = [
    "mkdocs>=1.4.0",
    "mkdocs-material>=9.0.0",
    "mkdocstrings[python]>=0.20.0",
]

[tool.hatch.build.targets.wheel]
packages = ["src/fastapi_mcp_client"]

[tool.ruff]
line-length = 100
target-version = "py310"

[tool.ruff.per-file-ignores]
"tests/*" = ["E", "F", "I", "N", "B", "ANN"]
"examples/*" = ["E", "F", "I", "N", "B", "ANN"]

[tool.ruff.isort]
known-first-party = ["fastapi_mcp_client"]

[tool.pytest.ini_options]
asyncio_mode = "auto"
testpaths = ["tests"]
markers = [
    "unit: mark test as a unit test",
    "integration: mark test as an integration test",
]

[tool.mypy]
python_version = "3.10"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true

[[tool.mypy.overrides]]
module = "tests.*"
disallow_untyped_defs = false
disallow_incomplete_defs = false 

[dependency-groups]
dev = [
    "build>=1.2.2.post1",
    "twine>=6.1.0",
]
