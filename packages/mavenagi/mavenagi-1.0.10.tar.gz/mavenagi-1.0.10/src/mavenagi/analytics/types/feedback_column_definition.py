# This file was auto-generated by Fern from our API Definition.

from .column_definition_base import ColumnDefinitionBase
from .feedback_metric import FeedbackMetric
import pydantic
from ...core.pydantic_utilities import IS_PYDANTIC_V2
import typing


class FeedbackColumnDefinition(ColumnDefinitionBase):
    metric: FeedbackMetric = pydantic.Field()
    """
    The metric calculated for this column, stored in the row data under the specified header.
    """

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
