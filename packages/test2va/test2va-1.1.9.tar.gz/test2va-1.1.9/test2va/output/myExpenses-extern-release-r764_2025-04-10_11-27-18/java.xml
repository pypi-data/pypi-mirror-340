<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" revision="1.0.0" language="Java" filename="C:\Users\sheer\PycharmProjects\test2va_fix_github\Test2VA\test2va\examples\MYEXPENSES\SortingByAmountTest.java"><package>package <name><name>org</name><operator>.</operator><name>totschnig</name><operator>.</operator><name>myexpenses</name><operator>.</operator><name>test2va</name></name>;</package>

<import>import static <name><name>androidx</name><operator>.</operator><name>test</name><operator>.</operator><name>espresso</name><operator>.</operator><name>Espresso</name><operator>.</operator><name>onView</name></name>;</import>
<import>import static <name><name>androidx</name><operator>.</operator><name>test</name><operator>.</operator><name>espresso</name><operator>.</operator><name>action</name><operator>.</operator><name>ViewActions</name><operator>.</operator><name>click</name></name>;</import>
<import>import static <name><name>androidx</name><operator>.</operator><name>test</name><operator>.</operator><name>espresso</name><operator>.</operator><name>action</name><operator>.</operator><name>ViewActions</name><operator>.</operator><name>replaceText</name></name>;</import>
<import>import static <name><name>androidx</name><operator>.</operator><name>test</name><operator>.</operator><name>espresso</name><operator>.</operator><name>action</name><operator>.</operator><name>ViewActions</name><operator>.</operator><name>scrollTo</name></name>;</import>
<import>import static <name><name>androidx</name><operator>.</operator><name>test</name><operator>.</operator><name>espresso</name><operator>.</operator><name>action</name><operator>.</operator><name>ViewActions</name><operator>.</operator><name>typeText</name></name>;</import>
<import>import static <name><name>androidx</name><operator>.</operator><name>test</name><operator>.</operator><name>espresso</name><operator>.</operator><name>assertion</name><operator>.</operator><name>ViewAssertions</name><operator>.</operator><name>matches</name></name>;</import>
<import>import static <name><name>androidx</name><operator>.</operator><name>test</name><operator>.</operator><name>espresso</name><operator>.</operator><name>matcher</name><operator>.</operator><name>ViewMatchers</name><operator>.</operator><name>hasDescendant</name></name>;</import>
<import>import static <name><name>androidx</name><operator>.</operator><name>test</name><operator>.</operator><name>espresso</name><operator>.</operator><name>matcher</name><operator>.</operator><name>ViewMatchers</name><operator>.</operator><name>isDisplayed</name></name>;</import>
<import>import static <name><name>androidx</name><operator>.</operator><name>test</name><operator>.</operator><name>espresso</name><operator>.</operator><name>matcher</name><operator>.</operator><name>ViewMatchers</name><operator>.</operator><name>isNotChecked</name></name>;</import>
<import>import static <name><name>androidx</name><operator>.</operator><name>test</name><operator>.</operator><name>espresso</name><operator>.</operator><name>matcher</name><operator>.</operator><name>ViewMatchers</name><operator>.</operator><name>withContentDescription</name></name>;</import>
<import>import static <name><name>androidx</name><operator>.</operator><name>test</name><operator>.</operator><name>espresso</name><operator>.</operator><name>matcher</name><operator>.</operator><name>ViewMatchers</name><operator>.</operator><name>withId</name></name>;</import>
<import>import static <name><name>androidx</name><operator>.</operator><name>test</name><operator>.</operator><name>espresso</name><operator>.</operator><name>matcher</name><operator>.</operator><name>ViewMatchers</name><operator>.</operator><name>withParent</name></name>;</import>
<import>import static <name><name>androidx</name><operator>.</operator><name>test</name><operator>.</operator><name>espresso</name><operator>.</operator><name>matcher</name><operator>.</operator><name>ViewMatchers</name><operator>.</operator><name>withParentIndex</name></name>;</import>
<import>import static <name><name>androidx</name><operator>.</operator><name>test</name><operator>.</operator><name>espresso</name><operator>.</operator><name>matcher</name><operator>.</operator><name>ViewMatchers</name><operator>.</operator><name>withText</name></name>;</import>
<import>import static <name><name>org</name><operator>.</operator><name>hamcrest</name><operator>.</operator><name>Matchers</name><operator>.</operator><name>allOf</name></name>;</import>
<import>import static <name><name>org</name><operator>.</operator><name>hamcrest</name><operator>.</operator><name>Matchers</name><operator>.</operator><name>containsString</name></name>;</import>

<import>import <name><name>androidx</name><operator>.</operator><name>test</name><operator>.</operator><name>ext</name><operator>.</operator><name>junit</name><operator>.</operator><name>rules</name><operator>.</operator><name>ActivityScenarioRule</name></name>;</import>

<import>import <name><name>org</name><operator>.</operator><name>junit</name><operator>.</operator><name>Before</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>junit</name><operator>.</operator><name>Rule</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>junit</name><operator>.</operator><name>Test</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>totschnig</name><operator>.</operator><name>myexpenses</name><operator>.</operator><name>R</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>totschnig</name><operator>.</operator><name>myexpenses</name><operator>.</operator><name>activity</name><operator>.</operator><name>SplashActivity</name></name>;</import>

<class><specifier>public</specifier> class <name>SortingByAmountTest</name> <block>{

    <decl_stmt><decl><annotation>@<name>Rule</name></annotation>
    <type><specifier>public</specifier> <name><name>ActivityScenarioRule</name><argument_list type="generic">&lt;<argument><name>SplashActivity</name></argument>&gt;</argument_list></name></type> <name>rule</name> <init>= <expr><operator>new</operator> <call><name><name>ActivityScenarioRule</name><argument_list type="generic">&lt;&gt;</argument_list></name><argument_list>(<argument><expr><name><name>SplashActivity</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <function><annotation>@<name>Before</name></annotation>
    <type><specifier>public</specifier> <name>void</name></type> <name>setup</name><parameter_list>()</parameter_list> <block>{<block_content>
        <comment type="line">//OnboardingActivity</comment>
        <expr_stmt><expr><call><name>onView</name><argument_list>(<argument><expr><call><name>allOf</name><argument_list>(<argument><expr><call><name>withText</name><argument_list>(<argument><expr><literal type="string">"Next"</literal></expr></argument>)</argument_list></call></expr></argument>,
                <argument><expr><call><name>isDisplayed</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call><operator>.</operator><call><name>perform</name><argument_list>(<argument><expr><call><name>click</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>onView</name><argument_list>(<argument><expr><call><name>allOf</name><argument_list>(<argument><expr><call><name>withText</name><argument_list>(<argument><expr><literal type="string">"Next"</literal></expr></argument>)</argument_list></call></expr></argument>,
                <argument><expr><call><name>isDisplayed</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call><operator>.</operator><call><name>perform</name><argument_list>(<argument><expr><call><name>click</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>onView</name><argument_list>(<argument><expr><call><name>allOf</name><argument_list>(<argument><expr><call><name>withText</name><argument_list>(<argument><expr><literal type="string">"Get started"</literal></expr></argument>)</argument_list></call></expr></argument>,
                <argument><expr><call><name>isDisplayed</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call><operator>.</operator><call><name>perform</name><argument_list>(<argument><expr><call><name>click</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="line">// add first expense</comment>
        <expr_stmt><expr><call><name>onView</name><argument_list>(<argument><expr><call><name>allOf</name><argument_list>(<argument><expr><call><name>withId</name><argument_list>(<argument><expr><name><name>R</name><operator>.</operator><name>id</name><operator>.</operator><name>fab</name></name></expr></argument>)</argument_list></call></expr></argument>,
                <argument><expr><call><name>isDisplayed</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call><operator>.</operator><call><name>perform</name><argument_list>(<argument><expr><call><name>click</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>onView</name><argument_list>(<argument><expr><call><name>allOf</name><argument_list>(<argument><expr><call><name>withId</name><argument_list>(<argument><expr><name><name>R</name><operator>.</operator><name>id</name><operator>.</operator><name>AmountEditText</name></name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><call><name>withParent</name><argument_list>(<argument><expr><call><name>allOf</name><argument_list>(<argument><expr><call><name>withId</name><argument_list>(<argument><expr><name><name>R</name><operator>.</operator><name>id</name><operator>.</operator><name>Amount</name></name></expr></argument>)</argument_list></call></expr></argument>,
                <argument><expr><call><name>hasDescendant</name><argument_list>(<argument><expr><call><name>allOf</name><argument_list>(<argument><expr><call><name>withId</name><argument_list>(<argument><expr><name><name>R</name><operator>.</operator><name>id</name><operator>.</operator><name>TaType</name></name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><call><name>isNotChecked</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call><operator>.</operator><call><name>perform</name><argument_list>(<argument><expr><call><name>replaceText</name><argument_list>(<argument><expr><literal type="string">"50"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>onView</name><argument_list>(<argument><expr><call><name>allOf</name><argument_list>(<argument><expr><call><name>withId</name><argument_list>(<argument><expr><name><name>R</name><operator>.</operator><name>id</name><operator>.</operator><name>Comment</name></name></expr></argument>)</argument_list></call></expr></argument>,
                <argument><expr><call><name>isDisplayed</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call><operator>.</operator><call><name>perform</name><argument_list>(<argument><expr><call><name>typeText</name><argument_list>(<argument><expr><literal type="string">"Grocery"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>onView</name><argument_list>(<argument><expr><call><name>allOf</name><argument_list>(<argument><expr><call><name>withId</name><argument_list>(<argument><expr><name><name>R</name><operator>.</operator><name>id</name><operator>.</operator><name>fab</name></name></expr></argument>)</argument_list></call></expr></argument>,
                <argument><expr><call><name>isDisplayed</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call><operator>.</operator><call><name>perform</name><argument_list>(<argument><expr><call><name>click</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="line">// add second expense</comment>
        <expr_stmt><expr><call><name>onView</name><argument_list>(<argument><expr><call><name>allOf</name><argument_list>(<argument><expr><call><name>withId</name><argument_list>(<argument><expr><name><name>R</name><operator>.</operator><name>id</name><operator>.</operator><name>fab</name></name></expr></argument>)</argument_list></call></expr></argument>,
                <argument><expr><call><name>isDisplayed</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call><operator>.</operator><call><name>perform</name><argument_list>(<argument><expr><call><name>click</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>onView</name><argument_list>(<argument><expr><call><name>allOf</name><argument_list>(<argument><expr><call><name>withId</name><argument_list>(<argument><expr><name><name>R</name><operator>.</operator><name>id</name><operator>.</operator><name>AmountEditText</name></name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><call><name>withParent</name><argument_list>(<argument><expr><call><name>allOf</name><argument_list>(<argument><expr><call><name>withId</name><argument_list>(<argument><expr><name><name>R</name><operator>.</operator><name>id</name><operator>.</operator><name>Amount</name></name></expr></argument>)</argument_list></call></expr></argument>,
                <argument><expr><call><name>hasDescendant</name><argument_list>(<argument><expr><call><name>allOf</name><argument_list>(<argument><expr><call><name>withId</name><argument_list>(<argument><expr><name><name>R</name><operator>.</operator><name>id</name><operator>.</operator><name>TaType</name></name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><call><name>isNotChecked</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call><operator>.</operator><call><name>perform</name><argument_list>(<argument><expr><call><name>replaceText</name><argument_list>(<argument><expr><literal type="string">"30"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>onView</name><argument_list>(<argument><expr><call><name>allOf</name><argument_list>(<argument><expr><call><name>withId</name><argument_list>(<argument><expr><name><name>R</name><operator>.</operator><name>id</name><operator>.</operator><name>Comment</name></name></expr></argument>)</argument_list></call></expr></argument>,
                <argument><expr><call><name>isDisplayed</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call><operator>.</operator><call><name>perform</name><argument_list>(<argument><expr><call><name>typeText</name><argument_list>(<argument><expr><literal type="string">"Movie"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>onView</name><argument_list>(<argument><expr><call><name>allOf</name><argument_list>(<argument><expr><call><name>withId</name><argument_list>(<argument><expr><name><name>R</name><operator>.</operator><name>id</name><operator>.</operator><name>fab</name></name></expr></argument>)</argument_list></call></expr></argument>,
                <argument><expr><call><name>isDisplayed</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call><operator>.</operator><call><name>perform</name><argument_list>(<argument><expr><call><name>click</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></function>

    <function><annotation>@<name>Test</name></annotation>
    <type><specifier>public</specifier> <name>void</name></type> <name>sortingByAmountTest</name><parameter_list>()</parameter_list> <throws>throws <argument><expr><name>InterruptedException</name></expr></argument></throws> <block>{<block_content>

        <expr_stmt><expr><call><name>onView</name><argument_list>(<argument><expr><call><name>withContentDescription</name><argument_list>(<argument><expr><call><name>containsString</name><argument_list>(<argument><expr><literal type="string">"More options"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call><operator>.</operator><call><name>perform</name><argument_list>(<argument><expr><call><name>click</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>Thread</name><operator>.</operator><name>sleep</name></name><argument_list>(<argument><expr><literal type="number">2000</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>onView</name><argument_list>(<argument><expr><call><name>withText</name><argument_list>(<argument><expr><literal type="string">"Sort by"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call><operator>.</operator><call><name>perform</name><argument_list>(<argument><expr><call><name>click</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>Thread</name><operator>.</operator><name>sleep</name></name><argument_list>(<argument><expr><literal type="number">2000</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>onView</name><argument_list>(<argument><expr><call><name>withText</name><argument_list>(<argument><expr><literal type="string">"Amount / Descending"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call><operator>.</operator><call><name>perform</name><argument_list>(<argument><expr><call><name>click</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>Thread</name><operator>.</operator><name>sleep</name></name><argument_list>(<argument><expr><literal type="number">2000</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>


        <expr_stmt><expr><call><name>onView</name><argument_list>(<argument><expr><call><name>allOf</name><argument_list>(<argument><expr><call><name>withText</name><argument_list>(<argument><expr><call><name>containsString</name><argument_list>(<argument><expr><literal type="string">"-$50.00"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><call><name>withParent</name><argument_list>(<argument><expr><call><name>withParentIndex</name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call>
                <operator>.</operator><call><name>check</name><argument_list>(<argument><expr><call><name>matches</name><argument_list>(<argument><expr><call><name>isDisplayed</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>onView</name><argument_list>(<argument><expr><call><name>allOf</name><argument_list>(<argument><expr><call><name>withText</name><argument_list>(<argument><expr><call><name>containsString</name><argument_list>(<argument><expr><literal type="string">"-$30.00"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><call><name>withParent</name><argument_list>(<argument><expr><call><name>withParentIndex</name><argument_list>(<argument><expr><literal type="number">1</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call>
                <operator>.</operator><call><name>check</name><argument_list>(<argument><expr><call><name>matches</name><argument_list>(<argument><expr><call><name>isDisplayed</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></function>
}</block></class>
</unit>
