[tool.poetry]
authors = ["Michael Wardman <wardy3@gmail.com>"]
description = "Core and common utilities, eg, email and CSV functions"
license = "MIT"
name = "wardy-core"
packages = [{ include = "core", from = "." }]
version = "0.1.4.3"

[tool.poetry.dependencies]
python = ">=3.9,<3.13"

XlsxWriter = ">=1.2.9"
dacite = ">=1.4.0"

[tool.poetry.group.dev.dependencies]
mypy = "^1.9.0"
vulture = "^2.11"

[tool.poetry.group.test.dependencies]
test-environment = { version = "^1.3.0", source = "Aaarrrrgghile" }
# dodge while gitlab-issue in Storage
gitpython = "^3.1.41"
python-dotenv = "^1.0.0"
python-gitlab = "^4.4.0"
typer = "^0.12.1"

[build-system]
build-backend = "poetry.core.masonry.api"
requires = ["poetry-core>=1.0.0"]

[[tool.poetry.source]]
name = "Aaarrrrgghile"
priority = "supplemental"
url = "https://gitlab.com/api/v4/projects/23576087/packages/pypi/simple"

[[tool.poetry.source]]
name = "Private-Idaho"
priority = "supplemental"
url = "https://gitlab.com/api/v4/projects/68880898/packages/pypi/simple"

[tool.pytest.ini_options]
addopts = "-v --capture=tee-sys --durations=3 -p no:pastebin -p no:nose -p no:doctest"

log_level = "DEBUG"
minversion = "6.0"
pythonpath = [".", "tests"]
xfail_strict = true

filterwarnings = "ignore::urllib3.exceptions.InsecureRequestWarning"

[tool.coverage.report]
exclude_lines = ["@.*overload", "pragma: no cover", 'class \w+\((typing.|tp.)?Protocol\)']

[tool.mypy]
enable_error_code = "ignore-without-code"
explicit_package_bases = true
namespace_packages = true
strict = true
warn_unused_configs = true

[[tool.mypy.overrides]]
ignore_missing_imports = true
module = ["diskcache"]

[tool.pydantic-mypy]
init_forbid_extra = true
init_typed = true
warn_required_dynamic_aliases = true
warn_untyped_fields = true

[tool.ruff]
ignore = ["COM812", "FIX", "ISC001", "Q000", "S101", "TD", "UP007", "W291", "W293"]
line-length = 95
select = ["ALL"]
target-version = "py311"

[tool.ruff.per-file-ignores]
"*model*/*.py" = ["D101", "ERA001", "UP006", "UP035"]
"tests/*.py" = [
  "ANN401",
  "B018",
  "D102",
  "D103",
  "FBT001",
  "PD901",
  "PLR0913",
  "PLR2004",
  "PT006",
  "S105",
  "S106",
  "S311",
  "SLF001",
]
"typings/*.pyi" = ["A002", "A003", "ANN401", "E501", "F401", "PLR0913"]

[tool.ruff.format]
skip-magic-trailing-comma = true

[tool.ruff.isort]
split-on-trailing-comma = false

[tool.ruff.pep8-naming]
# Allow Pydantic's `@validator` decorator to trigger class method treatment.
classmethod-decorators = ["pydantic.validator"]

[tool.ruff.pydocstyle]
convention = "google"
