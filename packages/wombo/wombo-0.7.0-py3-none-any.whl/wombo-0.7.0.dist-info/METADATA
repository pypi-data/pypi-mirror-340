Metadata-Version: 2.4
Name: wombo
Version: 0.7.0
Summary: Image generation module. I use the dream neural network from wombo for my work.
Project-URL: Homepage, https://github.com/pokedim13/wombo
Project-URL: Documentation, https://github.com/pokedim13/wombo
Project-URL: Repository, https://github.com/pokedim13/wombo.git
Project-URL: Issues, https://github.com/pokedim13/wombo/issues
Author-email: Aleksey Baev <skinxedovich@vk.com>
Maintainer-email: Aleksey Baev <skinxedovich@vk.com>
License: MIT License
        
        Copyright (c) 2023 sweetdogs
        
        Permission is hereby granted, free of charge, to any person obtaining a copy
        of this software and associated documentation files (the "Software"), to deal
        in the Software without restriction, including without limitation the rights
        to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
        copies of the Software, and to permit persons to whom the Software is
        furnished to do so, subject to the following conditions:
        
        The above copyright notice and this permission notice shall be included in all
        copies or substantial portions of the Software.
        
        THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
        IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
        FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
        AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
        LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
        OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
        SOFTWARE.
License-File: LICENSE
Keywords: API,SDK,dream,wombo
Requires-Python: >=3.12
Requires-Dist: httpx>=0.28.1
Requires-Dist: pydantic>=2.10.6
Provides-Extra: cli
Requires-Dist: rich>=13.7.1; extra == 'cli'
Requires-Dist: typer>=0.9.0; extra == 'cli'
Description-Content-Type: text/markdown

<div align="center">
    <h2>Hello, Hello! My name is</h2>
    <img src="assets/logos/wombo.png">
    <h2>Библиотека и CLI для работы с Wombo Dream API</h2>
</div>

## Установка

```bash
# Только библиотека
pip install wombo

# Установка с CLI интерфейсом
pip install wombo[cli]

# С помощью uv
uv pip install wombo[cli]

# Для разработки из исходников
git clone https://github.com/pokedim13/wombo.git
cd wombo
uv sync --all-groups  # установка всех зависимостей
uv pip install -e .   # установка библиотеки в режиме разработки
```

## Использование библиотеки

```python
from wombo.api import Dream

# Создаем экземпляр Dream
dream = Dream()

# Получаем доступные стили
styles = dream.Style.get_styles()

# Генерируем изображение
task = dream.generate(
    text="Русская зима в деревне",
    style=115,  # Dreamland v3
    timeout=60
)

# Получаем URL изображения
print(task.result.final)
```

## CLI-интерфейс

Библиотека также предоставляет CLI-интерфейс для удобного использования в командной строке.

### Управление аккаунтом

```bash
# Вход в аккаунт с токеном
wombo login --token <ТОКЕН>

# Выход из аккаунта
wombo logout

# Проверка статуса авторизации
wombo status
```

> **Примечание:** Если вы не авторизуетесь с собственным токеном через `wombo login --token`, библиотека автоматически использует анонимный токен. С анонимным токеном доступны базовые функции, но премиум-возможности ограничены. Для полного доступа рекомендуется использовать собственный токен.

### Вывод доступных стилей

```bash
wombo styles
```

Параметры:
- `--premium`, `-p`: Показать только премиум стили
- `--regular`, `-r`: Показать только обычные стили
- `--sort`, `-s`: Сортировка (id, name) (по умолчанию id)

Примеры:
```bash
# Показать все стили
wombo styles

# Показать только премиум стили
wombo styles --premium

# Показать стили с сортировкой по имени
wombo styles --sort name
```

### Генерация изображения

```bash
wombo create <ЗАПРОС> [ПАРАМЕТРЫ]
```

Параметры:
- `--style`, `-s`: ID стиля генерации (по умолчанию 115)
- `--ratio`, `-r`: Соотношение сторон изображения (по умолчанию old_vertical_ratio)
- `--premium`, `-p`: Использовать премиум опции
- `--freq`, `-f`: Частота обновления изображения (по умолчанию 10)
- `--wait`, `-w`: Ожидать завершения задачи
- `--timeout`, `-t`: Время ожидания в секундах при --wait (по умолчанию 60)
- `--interval`, `-i`: Интервал проверки в секундах при --wait (по умолчанию 3)
- `--save`: Сохранить изображение локально после генерации

Примеры:
```bash
# Создание задачи на генерацию с запросом
wombo create "Русская зима в деревне"

# Создание задачи с указанным стилем и ожиданием результата
wombo create "Осенний лес на закате" -s 46 --wait

# Создание задачи с ожиданием результата и сохранением изображения
wombo create "Космическая станция" --wait --save
```

### Проверка статуса задачи

```bash
wombo check <TASK_ID> [ПАРАМЕТРЫ]
```

Параметры:
- `--save`: Сохранить изображение локально, если задача завершена

Примеры:
```bash
# Проверка статуса задачи
wombo check abc123xyz

# Проверка статуса и сохранение изображения, если задача завершена
wombo check abc123xyz --save
```

## Хранение данных

### Linux и macOS
- Конфигурационный файл: `~/.config/akellare/wombo/config.json`
- Изображения: `~/akellare/wombo/images/`

### Windows
- Конфигурационный файл: `%APPDATA%\akellare\wombo\config.json`
- Изображения: `%USERPROFILE%\Documents\akellare\wombo\images\`

## Использование с uv

Если вы используете uv, можно запускать команды через него:

```bash
uv run wombo styles
uv run wombo create "Ваш запрос" -s 115
```

<div>См. примеры использования</div>
<img src="assets/example.gif">