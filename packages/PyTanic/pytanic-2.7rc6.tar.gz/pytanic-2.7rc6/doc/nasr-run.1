.\" DO NOT MODIFY THIS FILE!  It was generated by help2man 1.49.3.
.TH USAGE: "1" "2025" "Usage: nasr [--mode=compilation_mode] [--run] [settings] main_module.py" "User Commands"
.SH NAME
Usage: \- the Python compiler
.SH SYNOPSIS
.B nasr
[\fI\,--mode=compilation_mode\/\fR] [\fI\,--run\/\fR] [\fI\,settings\/\fR] \fI\,main_module.py\/\fR
.SH DESCRIPTION
.IP
Note: For general plugin help (they often have their own
command line settings too), consider the output of
\&'\-\-help\-plugins'.
.PP
nasr: error: no such option: \fB\-\-help\-plugins\-run\fR
.IP
Note: For general plugin help (they often have their own
command line settings too), consider the output of
\&'\-\-help\-plugins'.
.PP
nasr: error: no such option: \fB\-\-help\-plugins\-run\fR
.SH EXAMPLES

Compile a Python file "some_module.py" to a module "some_module.so":
.IP
\f(CW$ nasr \-\-module some_module.py\fR
.PP
Compile a Python program "some_program.py" to an executable "some_program.exe":
.IP
\f(CW$ nasr some_program.py\fR
.PP
Compile a Python program "some_program.py" and the package "some_package" it
uses to an executable "some_program.exe":
.IP
\f(CW$ nasr \-\-follow\-import-\-to=some_package some_program.py\fR
.PP
Compile a Python program "some_program.py" and all the modules it uses to an executable "some_program.exe". Then execute it immediately when ready:
.IP
\f(CW$ nasr \-\-run \-\-follow\-imports some_program.py\fR
.PP
Compile a Python program "some_program.py" and the modules it uses (even standard library) to an executable "some_program.exe":
.IP
\f(CW$ nasr \-\-recurse\-all \-\-follow\-stdlib some_program.py\fR
.PP
Compile a Python program "some_program.py" and the modules it uses to an executable "some_program.exe". Keep the debug information, so valgrind, gdb, etc. work
nicely.

Note: This will *not* degrade performance:
.IP
\f(CW$ nasr \-\-unstripped \-\-follow\-imports some_program.py\fR
.PP
Compile a Python program "some_program.py" and the modules it uses to an executable "some_program.exe". Perform all kinds of checks about correctness of the generated
C and run\-time checks.

Note: This will degrade performance and should only be used to debug PyTanic:
.IP
\f(CW$ nasr \-\-debug \-\-follow\-imports some_program.py\fR
.PP
Compile a Python program "some_program.py" and the modules it uses to an executable "some_program.exe". Perform all kinds of checks about correctness of the generated
C and run\-time checks. Also use the debug Python library, which does its own checks.

Note: This will degrade performance and should only be used to debug PyTanic:
.IP
\f(CW$ nasr \-\-debug \-\-python-debug \-\-follow\-imports some_program.py\fR
.PP
