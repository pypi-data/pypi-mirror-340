Metadata-Version: 2.1
Name: xiyan-table-mcp-server
Version: 0.7.0
Summary: A Model Context Protocol (MCP) server that allows AI assistants to display table contents and perform natural language queries.
Author: Shixiaorong
Classifier: Development Status :: 3 - Alpha
Classifier: Intended Audience :: Developers
Classifier: License :: OSI Approved :: MIT License
Classifier: Programming Language :: Python :: 3.10
Classifier: Programming Language :: Python :: 3.11
Requires-Python: >=3.10
Description-Content-Type: text/markdown
Requires-Dist: httpx >=0.28.1
Requires-Dist: mcp[cli] >=1.2.0
Requires-Dist: fastapi >=0.109.0
Requires-Dist: uvicorn >=0.27.0
Requires-Dist: pydantic >=2.0.0
Requires-Dist: pandas >=2.0.0
Requires-Dist: pyyaml >=6.0.0
Requires-Dist: openai
Requires-Dist: dashscope

## Features
- üåê Analyze and query table information using natural language.
- ü§ñ Support general LLMs (GPT,Qwen-Max), and [XiYanTable]
- üîß Read table contents from CSV files

## Tools Preview
 - "The ``get_data`` tool offers a natural language interface for accessing CSV files and uses language model to analyze and respond to queries."

## QuickStart

Python 3.10+ is required. 
You can install the server through pip, and it will install the latest version:

```bash
pip install xiyan-table-mcp-server
```

After that you can directly run the server by:
```bash
python -m xiyan_table_mcp_server
```
But it does not provide any functions until you complete following config.
You will get a yml file. After that you can run the server by:
```yaml
env YML=path/to/yml python -m xiyan_table_mcp_server
```

## Configuration

You need a YAML config file to configure the server.
A default config file is provided in config_demo.yml which looks like this:

```yaml
table:
  path: "" 
  encoding: "utf-8"     
  preview_rows: 20       

model:
  model_name: "qwen-max-0125"
  api_key: ""
  api_base: "https://dashscope.aliyuncs.com/compatible-mode/v1"
  temperature: 0.1

server:
  name: "xiyan-table"    
  version: "0.1.0"   
```

## Launch
```json
{
    "mcpServers": {
        "xiyan-table-mcp-server": {
            "command": "python",
            "args": [
                "-m",
                "xiyan_table_mcp_server"
            ],
            "env": {
                "YML": "PATH/TO/YML"
            }
        }
    }
}

