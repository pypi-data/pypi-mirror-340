Metadata-Version: 2.4
Name: MaFreDo
Version: 2025.1.2
Summary: Marine Frequency Domain
Home-page: https://github.com/RubendeBruin/mafredo
Author: Ruben de Bruin
Author-email: rubenebruin@gmail.com
License: MPL-2.0
Project-URL: Documentation, https://open-ocean.org/mafredo
Platform: any
Classifier: Development Status :: 4 - Beta
Classifier: Programming Language :: Python
Description-Content-Type: text/x-rst; charset=UTF-8
License-File: LICENSE
License-File: LICENSE.txt
License-File: AUTHORS.rst
Requires-Dist: importlib-metadata; python_version < "3.8"
Requires-Dist: numpy
Requires-Dist: xarray
Requires-Dist: capytaine
Requires-Dist: matplotlib
Requires-Dist: pyyaml
Provides-Extra: testing
Requires-Dist: setuptools; extra == "testing"
Requires-Dist: pytest; extra == "testing"
Requires-Dist: pytest-cov; extra == "testing"
Dynamic: license-file

**Ma** rine **Fre** quency **Do** main

A set of tools for working with frequency domain data for marine applications.

The purpose of this package is not to provide yet another format for storing hydrodynamic data.

The purpose is to provide an easier way to store, visualize, exchange, compare and modify this data.

This is done by creating classes for the typical data-types:

- Rao (Raos of any kind)
- Hyddb1 (First order hydrodynamic database with added mass, damping and wave-forces)

These classes supply static methods to create them from supported data-types. For example:

>>> my_vessel = Hyddb1.create_from_capytaine(filename = 'titanic.nc')

modification functions

>>> my_vessel.regrid_omega(new_omega)
>>> my_vessel.add_heading(new_heading)

and export/plot function

>>> my_vessel.plot()
>>> my_vessel.save_as_hyd('titanic.hyd')

Inspired by and build to work with:

- capytaine (BEM) [https://github.com/mancellin/capytaine]
- wavespectra ([https://github.com/wavespectra/wavespectra])
- DAVE (General marine modeller) [https://open-ocean.org/DAVE]

Install
========

Any of the following:

- Conda: `conda install mafredo -c conda-forge`

- Mamba: `mamba install mafredo -c conda-forge`

- pip: `pip install mafredo`

Contributions, compliments and complaints
================================================
https://github.com/RubendeBruin/mafredo

Docs
========
https://mafredo.readthedocs.io/en/latest/



